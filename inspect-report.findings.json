{"findings": [{"app": "vulpy", "type": "extscan", "title": "Credential in plaintext?\n\nRule: Files with keys and credentials\nLine: N/A\n\nCommit: 0055ef29e3a3f6cf40371555a216474b24f46bb4.", "description": "The application stores sensitive information in cleartext within a resource that might be accessible to another control sphere.\n\n## Additional information\n\n**[Files with keys and credentials](https://cwe.mitre.org/data/definitions/312.html)**", "internal_id": "CWE-312/9e41fd4dd03213e17941189be3ee68d5", "severity": "moderate", "owasp_category": "", "category": "Files with keys and credentials", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "", "repositoryName": "vulpy", "repositoryUri": "https://github.com/fportantier/vulpy", "revisionId": "5249cc8b05a1c37f6b2f757b1cf16a509c327122", "branch": "master", "invokedBy": "Fabian Martinez Portantier <fportantier@securetia.com>", "pullRequest": false, "botUser": false}, "name": "Credential in plaintext?\n\nRule: Files with keys and credentials\nLine: N/A\n\nCommit: 0055ef29e3a3f6cf40371555a216474b24f46bb4.", "tags": "Scan", "fileName": "file:///home/ec2-user/vulnerableapps/vulpy/good/cutpasswd.py", "DATA_TYPE": "OSS_SCAN", "lineNumber": 1, "ruleId": "CWE-312", "ruleName": "Files with keys and credentials", "contextText": "N/A", "snippetText": "N/A"}, "tags": [{"key": "cwe_category", "value": "312", "shiftleft_managed": true}]}, {"app": "vulpy", "type": "extscan", "title": "Credential in plaintext?\n\nRule: Files with keys and credentials\nLine: N/A\n\nCommit: 0055ef29e3a3f6cf40371555a216474b24f46bb4.", "description": "The application stores sensitive information in cleartext within a resource that might be accessible to another control sphere.\n\n## Additional information\n\n**[Files with keys and credentials](https://cwe.mitre.org/data/definitions/312.html)**", "internal_id": "CWE-312/a672d68f0d1e54f77db132e4937cad5d", "severity": "moderate", "owasp_category": "", "category": "Files with keys and credentials", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "", "repositoryName": "vulpy", "repositoryUri": "https://github.com/fportantier/vulpy", "revisionId": "5249cc8b05a1c37f6b2f757b1cf16a509c327122", "branch": "master", "invokedBy": "Fabian Martinez Portantier <fportantier@securetia.com>", "pullRequest": false, "botUser": false}, "name": "Credential in plaintext?\n\nRule: Files with keys and credentials\nLine: N/A\n\nCommit: 0055ef29e3a3f6cf40371555a216474b24f46bb4.", "tags": "Scan", "fileName": "file:///home/ec2-user/vulnerableapps/vulpy/good/templates/user.chpasswd.html", "DATA_TYPE": "OSS_SCAN", "lineNumber": 1, "ruleId": "CWE-312", "ruleName": "Files with keys and credentials", "contextText": "N/A", "snippetText": "N/A"}, "tags": [{"key": "cwe_category", "value": "312", "shiftleft_managed": true}]}, {"app": "vulpy", "type": "extscan", "title": "Credential in plaintext?\n\nRule: Files with keys and credentials\nLine: N/A\n\nCommit: 0f7bee37b9807c97da933c480e1d90d07243dc7a.", "description": "The application stores sensitive information in cleartext within a resource that might be accessible to another control sphere.\n\n## Additional information\n\n**[Files with keys and credentials](https://cwe.mitre.org/data/definitions/312.html)**", "internal_id": "CWE-312/86231b52ab915a4280f3dc972c6a7b69", "severity": "moderate", "owasp_category": "", "category": "Files with keys and credentials", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "", "repositoryName": "vulpy", "repositoryUri": "https://github.com/fportantier/vulpy", "revisionId": "5249cc8b05a1c37f6b2f757b1cf16a509c327122", "branch": "master", "invokedBy": "Fabian Martinez Portantier <fportantier@securetia.com>", "pullRequest": false, "botUser": false}, "name": "Credential in plaintext?\n\nRule: Files with keys and credentials\nLine: N/A\n\nCommit: 0f7bee37b9807c97da933c480e1d90d07243dc7a.", "tags": "Scan", "fileName": "file:///home/ec2-user/vulnerableapps/vulpy/bad/cutpasswd.py", "DATA_TYPE": "OSS_SCAN", "lineNumber": 1, "ruleId": "CWE-312", "ruleName": "Files with keys and credentials", "contextText": "N/A", "snippetText": "N/A"}, "tags": [{"key": "cwe_category", "value": "312", "shiftleft_managed": true}]}, {"app": "vulpy", "type": "extscan", "title": "SQL injection with user data from `username in libmfa.py:5` used to construct the query at `libmfa.py:12`.", "description": "The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component.\n\n## Additional information\n\n**[SQL Injection](https://cwe.mitre.org/data/definitions/89.html)**", "internal_id": "taint-sqli/58f64b7fe83cec864986f3be70d09ab0", "severity": "critical", "owasp_category": "a1-injection", "category": "SQL Injection", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "", "repositoryName": "vulpy", "repositoryUri": "https://github.com/fportantier/vulpy", "revisionId": "5249cc8b05a1c37f6b2f757b1cf16a509c327122", "branch": "master", "invokedBy": "Fabian Martinez Portantier <fportantier@securetia.com>", "pullRequest": false, "botUser": false}, "name": "SQL injection with user data from `username in libmfa.py:5` used to construct the query at `libmfa.py:12`.", "tags": "Scan", "fileName": "file:///home/ec2-user/vulnerableapps/vulpy/good/libmfa.py", "DATA_TYPE": "OSS_SCAN", "lineNumber": 5, "ruleId": "taint-sqli", "ruleName": "SQL Injection", "contextText": "def mfa_is_enabled(username):\n", "snippetText": "\ndef mfa_is_enabled(username):\n\n    conn = sqlite3.connect('db_users.sqlite')\n"}, "tags": []}, {"app": "vulpy", "type": "extscan", "title": "SQL injection with user data from `username in libmfa.py:20` used to construct the query at `libmfa.py:27`.", "description": "The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component.\n\n## Additional information\n\n**[SQL Injection](https://cwe.mitre.org/data/definitions/89.html)**", "internal_id": "taint-sqli/d6669f47afc26bea327415998eb24687", "severity": "critical", "owasp_category": "a1-injection", "category": "SQL Injection", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "", "repositoryName": "vulpy", "repositoryUri": "https://github.com/fportantier/vulpy", "revisionId": "5249cc8b05a1c37f6b2f757b1cf16a509c327122", "branch": "master", "invokedBy": "Fabian Martinez Portantier <fportantier@securetia.com>", "pullRequest": false, "botUser": false}, "name": "SQL injection with user data from `username in libmfa.py:20` used to construct the query at `libmfa.py:27`.", "tags": "Scan", "fileName": "file:///home/ec2-user/vulnerableapps/vulpy/good/libmfa.py", "DATA_TYPE": "OSS_SCAN", "lineNumber": 20, "ruleId": "taint-sqli", "ruleName": "SQL Injection", "contextText": "def mfa_disable(username):\n", "snippetText": "\ndef mfa_disable(username):\n\n    conn = sqlite3.connect('db_users.sqlite')\n"}, "tags": []}, {"app": "vulpy", "type": "extscan", "title": "SQL injection with user data from `username in libmfa.py:33` used to construct the query at `libmfa.py:43`.", "description": "The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component.\n\n## Additional information\n\n**[SQL Injection](https://cwe.mitre.org/data/definitions/89.html)**", "internal_id": "taint-sqli/876a8d262e583c64d83da0dc423d1931", "severity": "critical", "owasp_category": "a1-injection", "category": "SQL Injection", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "", "repositoryName": "vulpy", "repositoryUri": "https://github.com/fportantier/vulpy", "revisionId": "5249cc8b05a1c37f6b2f757b1cf16a509c327122", "branch": "master", "invokedBy": "Fabian Martinez Portantier <fportantier@securetia.com>", "pullRequest": false, "botUser": false}, "name": "SQL injection with user data from `username in libmfa.py:33` used to construct the query at `libmfa.py:43`.", "tags": "Scan", "fileName": "file:///home/ec2-user/vulnerableapps/vulpy/good/libmfa.py", "DATA_TYPE": "OSS_SCAN", "lineNumber": 33, "ruleId": "taint-sqli", "ruleName": "SQL Injection", "contextText": "def mfa_enable(username):\n", "snippetText": "\ndef mfa_enable(username):\n\n    #secret=pyotp.random_base32()\n"}, "tags": []}, {"app": "vulpy", "type": "extscan", "title": "SQL injection with user data from `username in libmfa.py:49` used to construct the query at `libmfa.py:59`.", "description": "The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component.\n\n## Additional information\n\n**[SQL Injection](https://cwe.mitre.org/data/definitions/89.html)**", "internal_id": "taint-sqli/c9e25893cd75111f506dd4330b3a4a27", "severity": "critical", "owasp_category": "a1-injection", "category": "SQL Injection", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "", "repositoryName": "vulpy", "repositoryUri": "https://github.com/fportantier/vulpy", "revisionId": "5249cc8b05a1c37f6b2f757b1cf16a509c327122", "branch": "master", "invokedBy": "Fabian Martinez Portantier <fportantier@securetia.com>", "pullRequest": false, "botUser": false}, "name": "SQL injection with user data from `username in libmfa.py:49` used to construct the query at `libmfa.py:59`.", "tags": "Scan", "fileName": "file:///home/ec2-user/vulnerableapps/vulpy/good/libmfa.py", "DATA_TYPE": "OSS_SCAN", "lineNumber": 49, "ruleId": "taint-sqli", "ruleName": "SQL Injection", "contextText": "def mfa_get_secret(username):\n", "snippetText": "\ndef mfa_get_secret(username):\n\n    #secret=pyotp.random_base32()\n"}, "tags": []}, {"app": "vulpy", "type": "extscan", "title": "SQL injection with user data from `username in libmfa.py:67` used to construct the query at `libmfa.py:78`.", "description": "The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component.\n\n## Additional information\n\n**[SQL Injection](https://cwe.mitre.org/data/definitions/89.html)**", "internal_id": "taint-sqli/ae5904664413632d4ec7e7e52310be16", "severity": "critical", "owasp_category": "a1-injection", "category": "SQL Injection", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "", "repositoryName": "vulpy", "repositoryUri": "https://github.com/fportantier/vulpy", "revisionId": "5249cc8b05a1c37f6b2f757b1cf16a509c327122", "branch": "master", "invokedBy": "Fabian Martinez Portantier <fportantier@securetia.com>", "pullRequest": false, "botUser": false}, "name": "SQL injection with user data from `username in libmfa.py:67` used to construct the query at `libmfa.py:78`.", "tags": "Scan", "fileName": "file:///home/ec2-user/vulnerableapps/vulpy/good/libmfa.py", "DATA_TYPE": "OSS_SCAN", "lineNumber": 67, "ruleId": "taint-sqli", "ruleName": "SQL Injection", "contextText": "def mfa_reset_secret(username):\n", "snippetText": "\ndef mfa_reset_secret(username):\n\n    secret=pyotp.random_base32()\n"}, "tags": []}, {"app": "vulpy", "type": "extscan", "title": "SQL injection with user data from `username in libmfa.py:87` used to construct the query at `libmfa.py:59`.", "description": "The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component.\n\n## Additional information\n\n**[SQL Injection](https://cwe.mitre.org/data/definitions/89.html)**", "internal_id": "taint-sqli/c39355d230b5e58373f8e489d43fec6a", "severity": "critical", "owasp_category": "a1-injection", "category": "SQL Injection", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "", "repositoryName": "vulpy", "repositoryUri": "https://github.com/fportantier/vulpy", "revisionId": "5249cc8b05a1c37f6b2f757b1cf16a509c327122", "branch": "master", "invokedBy": "Fabian Martinez Portantier <fportantier@securetia.com>", "pullRequest": false, "botUser": false}, "name": "SQL injection with user data from `username in libmfa.py:87` used to construct the query at `libmfa.py:59`.", "tags": "Scan", "fileName": "file:///home/ec2-user/vulnerableapps/vulpy/good/libmfa.py", "DATA_TYPE": "OSS_SCAN", "lineNumber": 87, "ruleId": "taint-sqli", "ruleName": "SQL Injection", "contextText": "def mfa_validate(username, otp):\n", "snippetText": "\ndef mfa_validate(username, otp):\n\n    secret = mfa_get_secret(username)\n"}, "tags": []}, {"app": "vulpy", "type": "extscan", "title": "SQL injection with user data from `username in libposts.py:7` used to construct the query at `libposts.py:14`.", "description": "The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component.\n\n## Additional information\n\n**[SQL Injection](https://cwe.mitre.org/data/definitions/89.html)**", "internal_id": "taint-sqli/076f7fbb18f120dbcda9b9962135b635", "severity": "critical", "owasp_category": "a1-injection", "category": "SQL Injection", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "", "repositoryName": "vulpy", "repositoryUri": "https://github.com/fportantier/vulpy", "revisionId": "5249cc8b05a1c37f6b2f757b1cf16a509c327122", "branch": "master", "invokedBy": "Fabian Martinez Portantier <fportantier@securetia.com>", "pullRequest": false, "botUser": false}, "name": "SQL injection with user data from `username in libposts.py:7` used to construct the query at `libposts.py:14`.", "tags": "Scan", "fileName": "file:///home/ec2-user/vulnerableapps/vulpy/good/libposts.py", "DATA_TYPE": "OSS_SCAN", "lineNumber": 7, "ruleId": "taint-sqli", "ruleName": "SQL Injection", "contextText": "def get_posts(username):\n", "snippetText": "\ndef get_posts(username):\n\n    conn = sqlite3.connect('db_posts.sqlite')\n"}, "tags": []}, {"app": "vulpy", "type": "extscan", "title": "SQL injection with user data from `text in libposts.py:21` used to construct the query at `libposts.py:28`.", "description": "The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component.\n\n## Additional information\n\n**[SQL Injection](https://cwe.mitre.org/data/definitions/89.html)**", "internal_id": "taint-sqli/02df1bf13f20d5f1e467b132cac022b8", "severity": "critical", "owasp_category": "a1-injection", "category": "SQL Injection", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "", "repositoryName": "vulpy", "repositoryUri": "https://github.com/fportantier/vulpy", "revisionId": "5249cc8b05a1c37f6b2f757b1cf16a509c327122", "branch": "master", "invokedBy": "Fabian Martinez Portantier <fportantier@securetia.com>", "pullRequest": false, "botUser": false}, "name": "SQL injection with user data from `text in libposts.py:21` used to construct the query at `libposts.py:28`.", "tags": "Scan", "fileName": "file:///home/ec2-user/vulnerableapps/vulpy/good/libposts.py", "DATA_TYPE": "OSS_SCAN", "lineNumber": 21, "ruleId": "taint-sqli", "ruleName": "SQL Injection", "contextText": "def post(username, text):\n", "snippetText": "\ndef post(username, text):\n\n    conn = sqlite3.connect('db_posts.sqlite')\n"}, "tags": []}, {"app": "vulpy", "type": "extscan", "title": "SQL injection with user data from `username in libuser.py:15` used to construct the query at `libuser.py:22`.", "description": "The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component.\n\n## Additional information\n\n**[SQL Injection](https://cwe.mitre.org/data/definitions/89.html)**", "internal_id": "taint-sqli/85ac9cd77137ac688b945b4e40a2d034", "severity": "critical", "owasp_category": "a1-injection", "category": "SQL Injection", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "", "repositoryName": "vulpy", "repositoryUri": "https://github.com/fportantier/vulpy", "revisionId": "5249cc8b05a1c37f6b2f757b1cf16a509c327122", "branch": "master", "invokedBy": "Fabian Martinez Portantier <fportantier@securetia.com>", "pullRequest": false, "botUser": false}, "name": "SQL injection with user data from `username in libuser.py:15` used to construct the query at `libuser.py:22`.", "tags": "Scan", "fileName": "file:///home/ec2-user/vulnerableapps/vulpy/good/libuser.py", "DATA_TYPE": "OSS_SCAN", "lineNumber": 15, "ruleId": "taint-sqli", "ruleName": "SQL Injection", "contextText": "def login(username, password, **kwargs):\n", "snippetText": "\ndef login(username, password, **kwargs):\n\n    conn = sqlite3.connect('db_users.sqlite')\n"}, "tags": []}, {"app": "vulpy", "type": "extscan", "title": "SQL injection with user data from `username in libuser.py:55` used to construct the query at `libuser.py:61`.", "description": "The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component.\n\n## Additional information\n\n**[SQL Injection](https://cwe.mitre.org/data/definitions/89.html)**", "internal_id": "taint-sqli/633cd7a4549f14557648f6c19ef0d00a", "severity": "critical", "owasp_category": "a1-injection", "category": "SQL Injection", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "", "repositoryName": "vulpy", "repositoryUri": "https://github.com/fportantier/vulpy", "revisionId": "5249cc8b05a1c37f6b2f757b1cf16a509c327122", "branch": "master", "invokedBy": "Fabian Martinez Portantier <fportantier@securetia.com>", "pullRequest": false, "botUser": false}, "name": "SQL injection with user data from `username in libuser.py:55` used to construct the query at `libuser.py:61`.", "tags": "Scan", "fileName": "file:///home/ec2-user/vulnerableapps/vulpy/good/libuser.py", "DATA_TYPE": "OSS_SCAN", "lineNumber": 55, "ruleId": "taint-sqli", "ruleName": "SQL Injection", "contextText": "def user_create(username, password=None):\n", "snippetText": "\ndef user_create(username, password=None):\n\n    conn = sqlite3.connect('db_users.sqlite')\n"}, "tags": []}, {"app": "vulpy", "type": "extscan", "title": "SQL injection with user data from `username in libmfa.py:5` used to construct the query at `libmfa.py:12`.", "description": "The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component.\n\n## Additional information\n\n**[SQL Injection](https://cwe.mitre.org/data/definitions/89.html)**", "internal_id": "taint-sqli/cbdc8bd9c40ac113ae7a7740a3a85ef9", "severity": "critical", "owasp_category": "a1-injection", "category": "SQL Injection", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "", "repositoryName": "vulpy", "repositoryUri": "https://github.com/fportantier/vulpy", "revisionId": "5249cc8b05a1c37f6b2f757b1cf16a509c327122", "branch": "master", "invokedBy": "Fabian Martinez Portantier <fportantier@securetia.com>", "pullRequest": false, "botUser": false}, "name": "SQL injection with user data from `username in libmfa.py:5` used to construct the query at `libmfa.py:12`.", "tags": "Scan", "fileName": "file:///home/ec2-user/vulnerableapps/vulpy/bad/libmfa.py", "DATA_TYPE": "OSS_SCAN", "lineNumber": 5, "ruleId": "taint-sqli", "ruleName": "SQL Injection", "contextText": "def mfa_is_enabled(username):\n", "snippetText": "\ndef mfa_is_enabled(username):\n\n    conn = sqlite3.connect('db_users.sqlite')\n"}, "tags": []}, {"app": "vulpy", "type": "extscan", "title": "SQL injection with user data from `username in libmfa.py:20` used to construct the query at `libmfa.py:27`.", "description": "The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component.\n\n## Additional information\n\n**[SQL Injection](https://cwe.mitre.org/data/definitions/89.html)**", "internal_id": "taint-sqli/5bda7fb979cbf505d80d8ea28b741e7d", "severity": "critical", "owasp_category": "a1-injection", "category": "SQL Injection", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "", "repositoryName": "vulpy", "repositoryUri": "https://github.com/fportantier/vulpy", "revisionId": "5249cc8b05a1c37f6b2f757b1cf16a509c327122", "branch": "master", "invokedBy": "Fabian Martinez Portantier <fportantier@securetia.com>", "pullRequest": false, "botUser": false}, "name": "SQL injection with user data from `username in libmfa.py:20` used to construct the query at `libmfa.py:27`.", "tags": "Scan", "fileName": "file:///home/ec2-user/vulnerableapps/vulpy/bad/libmfa.py", "DATA_TYPE": "OSS_SCAN", "lineNumber": 20, "ruleId": "taint-sqli", "ruleName": "SQL Injection", "contextText": "def mfa_disable(username):\n", "snippetText": "\ndef mfa_disable(username):\n\n    conn = sqlite3.connect('db_users.sqlite')\n"}, "tags": []}, {"app": "vulpy", "type": "extscan", "title": "SQL injection with user data from `username in libmfa.py:33` used to construct the query at `libmfa.py:43`.", "description": "The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component.\n\n## Additional information\n\n**[SQL Injection](https://cwe.mitre.org/data/definitions/89.html)**", "internal_id": "taint-sqli/2253bc562e5853a49f3e76a443755d7b", "severity": "critical", "owasp_category": "a1-injection", "category": "SQL Injection", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "", "repositoryName": "vulpy", "repositoryUri": "https://github.com/fportantier/vulpy", "revisionId": "5249cc8b05a1c37f6b2f757b1cf16a509c327122", "branch": "master", "invokedBy": "Fabian Martinez Portantier <fportantier@securetia.com>", "pullRequest": false, "botUser": false}, "name": "SQL injection with user data from `username in libmfa.py:33` used to construct the query at `libmfa.py:43`.", "tags": "Scan", "fileName": "file:///home/ec2-user/vulnerableapps/vulpy/bad/libmfa.py", "DATA_TYPE": "OSS_SCAN", "lineNumber": 33, "ruleId": "taint-sqli", "ruleName": "SQL Injection", "contextText": "def mfa_enable(username):\n", "snippetText": "\ndef mfa_enable(username):\n\n    #secret=pyotp.random_base32()\n"}, "tags": []}, {"app": "vulpy", "type": "extscan", "title": "SQL injection with user data from `username in libmfa.py:49` used to construct the query at `libmfa.py:59`.", "description": "The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component.\n\n## Additional information\n\n**[SQL Injection](https://cwe.mitre.org/data/definitions/89.html)**", "internal_id": "taint-sqli/a04a2b4a819582e2006f9cfc370a199a", "severity": "critical", "owasp_category": "a1-injection", "category": "SQL Injection", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "", "repositoryName": "vulpy", "repositoryUri": "https://github.com/fportantier/vulpy", "revisionId": "5249cc8b05a1c37f6b2f757b1cf16a509c327122", "branch": "master", "invokedBy": "Fabian Martinez Portantier <fportantier@securetia.com>", "pullRequest": false, "botUser": false}, "name": "SQL injection with user data from `username in libmfa.py:49` used to construct the query at `libmfa.py:59`.", "tags": "Scan", "fileName": "file:///home/ec2-user/vulnerableapps/vulpy/bad/libmfa.py", "DATA_TYPE": "OSS_SCAN", "lineNumber": 49, "ruleId": "taint-sqli", "ruleName": "SQL Injection", "contextText": "def mfa_get_secret(username):\n", "snippetText": "\ndef mfa_get_secret(username):\n\n    #secret=pyotp.random_base32()\n"}, "tags": []}, {"app": "vulpy", "type": "extscan", "title": "SQL injection with user data from `username in libmfa.py:67` used to construct the query at `libmfa.py:78`.", "description": "The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component.\n\n## Additional information\n\n**[SQL Injection](https://cwe.mitre.org/data/definitions/89.html)**", "internal_id": "taint-sqli/3f4bf3ddb30e479af9f36044e1085181", "severity": "critical", "owasp_category": "a1-injection", "category": "SQL Injection", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "", "repositoryName": "vulpy", "repositoryUri": "https://github.com/fportantier/vulpy", "revisionId": "5249cc8b05a1c37f6b2f757b1cf16a509c327122", "branch": "master", "invokedBy": "Fabian Martinez Portantier <fportantier@securetia.com>", "pullRequest": false, "botUser": false}, "name": "SQL injection with user data from `username in libmfa.py:67` used to construct the query at `libmfa.py:78`.", "tags": "Scan", "fileName": "file:///home/ec2-user/vulnerableapps/vulpy/bad/libmfa.py", "DATA_TYPE": "OSS_SCAN", "lineNumber": 67, "ruleId": "taint-sqli", "ruleName": "SQL Injection", "contextText": "def mfa_reset_secret(username):\n", "snippetText": "\ndef mfa_reset_secret(username):\n\n    secret=pyotp.random_base32()\n"}, "tags": []}, {"app": "vulpy", "type": "extscan", "title": "SQL injection with user data from `username in libmfa.py:87` used to construct the query at `libmfa.py:59`.", "description": "The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component.\n\n## Additional information\n\n**[SQL Injection](https://cwe.mitre.org/data/definitions/89.html)**", "internal_id": "taint-sqli/2fb9356370221f25e719ef24261a0534", "severity": "critical", "owasp_category": "a1-injection", "category": "SQL Injection", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "", "repositoryName": "vulpy", "repositoryUri": "https://github.com/fportantier/vulpy", "revisionId": "5249cc8b05a1c37f6b2f757b1cf16a509c327122", "branch": "master", "invokedBy": "Fabian Martinez Portantier <fportantier@securetia.com>", "pullRequest": false, "botUser": false}, "name": "SQL injection with user data from `username in libmfa.py:87` used to construct the query at `libmfa.py:59`.", "tags": "Scan", "fileName": "file:///home/ec2-user/vulnerableapps/vulpy/bad/libmfa.py", "DATA_TYPE": "OSS_SCAN", "lineNumber": 87, "ruleId": "taint-sqli", "ruleName": "SQL Injection", "contextText": "def mfa_validate(username, otp):\n", "snippetText": "\ndef mfa_validate(username, otp):\n\n    secret = mfa_get_secret(username)\n"}, "tags": []}, {"app": "vulpy", "type": "extscan", "title": "SQL injection with user data from `username in libposts.py:7` used to construct the query at `libposts.py:14`.", "description": "The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component.\n\n## Additional information\n\n**[SQL Injection](https://cwe.mitre.org/data/definitions/89.html)**", "internal_id": "taint-sqli/20c177b5d0b550d595a064676cfc24d3", "severity": "critical", "owasp_category": "a1-injection", "category": "SQL Injection", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "", "repositoryName": "vulpy", "repositoryUri": "https://github.com/fportantier/vulpy", "revisionId": "5249cc8b05a1c37f6b2f757b1cf16a509c327122", "branch": "master", "invokedBy": "Fabian Martinez Portantier <fportantier@securetia.com>", "pullRequest": false, "botUser": false}, "name": "SQL injection with user data from `username in libposts.py:7` used to construct the query at `libposts.py:14`.", "tags": "Scan", "fileName": "file:///home/ec2-user/vulnerableapps/vulpy/bad/libposts.py", "DATA_TYPE": "OSS_SCAN", "lineNumber": 7, "ruleId": "taint-sqli", "ruleName": "SQL Injection", "contextText": "def get_posts(username):\n", "snippetText": "\ndef get_posts(username):\n\n    conn = sqlite3.connect('db_posts.sqlite')\n"}, "tags": []}, {"app": "vulpy", "type": "extscan", "title": "SQL injection with user data from `text in libposts.py:21` used to construct the query at `libposts.py:28`.", "description": "The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component.\n\n## Additional information\n\n**[SQL Injection](https://cwe.mitre.org/data/definitions/89.html)**", "internal_id": "taint-sqli/976eb35d37428afaff71617c236768d3", "severity": "critical", "owasp_category": "a1-injection", "category": "SQL Injection", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "", "repositoryName": "vulpy", "repositoryUri": "https://github.com/fportantier/vulpy", "revisionId": "5249cc8b05a1c37f6b2f757b1cf16a509c327122", "branch": "master", "invokedBy": "Fabian Martinez Portantier <fportantier@securetia.com>", "pullRequest": false, "botUser": false}, "name": "SQL injection with user data from `text in libposts.py:21` used to construct the query at `libposts.py:28`.", "tags": "Scan", "fileName": "file:///home/ec2-user/vulnerableapps/vulpy/bad/libposts.py", "DATA_TYPE": "OSS_SCAN", "lineNumber": 21, "ruleId": "taint-sqli", "ruleName": "SQL Injection", "contextText": "def post(username, text):\n", "snippetText": "\ndef post(username, text):\n\n    conn = sqlite3.connect('db_posts.sqlite')\n"}, "tags": []}, {"app": "vulpy", "type": "extscan", "title": "SQL injection with user data from `password in libuser.py:20` used to construct the query at `libuser.py:25`.", "description": "The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component.\n\n## Additional information\n\n**[SQL Injection](https://cwe.mitre.org/data/definitions/89.html)**", "internal_id": "taint-sqli/20b5e817a09497f114d54d4c5b329345", "severity": "critical", "owasp_category": "a1-injection", "category": "SQL Injection", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "", "repositoryName": "vulpy", "repositoryUri": "https://github.com/fportantier/vulpy", "revisionId": "5249cc8b05a1c37f6b2f757b1cf16a509c327122", "branch": "master", "invokedBy": "Fabian Martinez Portantier <fportantier@securetia.com>", "pullRequest": false, "botUser": false}, "name": "SQL injection with user data from `password in libuser.py:20` used to construct the query at `libuser.py:25`.", "tags": "Scan", "fileName": "file:///home/ec2-user/vulnerableapps/vulpy/bad/libuser.py", "DATA_TYPE": "OSS_SCAN", "lineNumber": 20, "ruleId": "taint-sqli", "ruleName": "SQL Injection", "contextText": "def create(username, password):\n", "snippetText": "\ndef create(username, password):\n\n    conn = sqlite3.connect('db_users.sqlite')\n"}, "tags": []}, {"app": "vulpy", "type": "extscan", "title": "Security Misconfiguration with the config `SECRET_KEY` set to a static value `aaaa****`.", "description": "Flask application is not configured correctly for deployment to production and live environments. Default settings that are more appropriate for development environment are in use.\n\n## Additional information\n\n**[OWASP-A6](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A6-Security_Misconfiguration)**\n\n**[Flask Security](https://flask-security.readthedocs.io/en/develop/configuration.html)**\n\n**[Flask Security Considerations](https://flask.palletsprojects.com/en/1.1.x/security/#security-considerations)**\n\n**[Flask Configuration](https://flask.palletsprojects.com/en/1.1.x/api/#configuration)**\n", "internal_id": "flask-misconfiguration-static/489a6ae589fd781d5bd7516b730ab038", "severity": "info", "owasp_category": "a6-misconfiguration", "category": "Security Misconfiguration", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "", "repositoryName": "vulpy", "repositoryUri": "https://github.com/fportantier/vulpy", "revisionId": "5249cc8b05a1c37f6b2f757b1cf16a509c327122", "branch": "master", "invokedBy": "Fabian Martinez Portantier <fportantier@securetia.com>", "pullRequest": false, "botUser": false}, "name": "Security Misconfiguration with the config `SECRET_KEY` set to a static value `aaaa****`.", "tags": "Scan", "fileName": "file:///home/ec2-user/vulnerableapps/vulpy/good/vulpy-ssl.py", "DATA_TYPE": "OSS_SCAN", "lineNumber": 13, "ruleId": "flask-misconfiguration-static", "ruleName": "Security Misconfiguration", "contextText": "app.config['SECRET_KEY'] = 'aaaaaaa'\n", "snippetText": "app = Flask('vulpy')\napp.config['SECRET_KEY'] = 'aaaaaaa'\n\napp.register_blueprint(mod_hello, url_prefix='/hello')\n"}, "tags": []}, {"app": "vulpy", "type": "extscan", "title": "Security Misconfiguration with the config `PREFERRED_URL_SCHEME` not set to the recommended value `https` for production use.", "description": "Flask application is not configured correctly for deployment to production and live environments. Default settings that are more appropriate for development environment are in use.\n\n## Additional information\n\n**[OWASP-A6](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A6-Security_Misconfiguration)**\n\n**[Flask Security](https://flask-security.readthedocs.io/en/develop/configuration.html)**\n\n**[Flask Security Considerations](https://flask.palletsprojects.com/en/1.1.x/security/#security-considerations)**\n\n**[Flask Configuration](https://flask.palletsprojects.com/en/1.1.x/api/#configuration)**\n", "internal_id": "flask-misconfiguration-recommended/67124ef1445e7317542fa000c45cd6fb", "severity": "moderate", "owasp_category": "a6-misconfiguration", "category": "Security Misconfiguration", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "", "repositoryName": "vulpy", "repositoryUri": "https://github.com/fportantier/vulpy", "revisionId": "5249cc8b05a1c37f6b2f757b1cf16a509c327122", "branch": "master", "invokedBy": "Fabian Martinez Portantier <fportantier@securetia.com>", "pullRequest": false, "botUser": false}, "name": "Security Misconfiguration with the config `PREFERRED_URL_SCHEME` not set to the recommended value `https` for production use.", "tags": "Scan", "fileName": "file:///home/ec2-user/vulnerableapps/vulpy/good/vulpy-ssl.py", "DATA_TYPE": "OSS_SCAN", "lineNumber": 1, "ruleId": "flask-misconfiguration-recommended", "ruleName": "Security Misconfiguration", "contextText": "#!/usr/bin/env python3\n", "snippetText": "#!/usr/bin/env python3\n\nfrom flask import Flask, g, redirect, request\n\n"}, "tags": []}, {"app": "vulpy", "type": "extscan", "title": "Security Misconfiguration with the config `SESSION_COOKIE_SECURE` not set to the recommended value `True` for production use.", "description": "Flask application is not configured correctly for deployment to production and live environments. Default settings that are more appropriate for development environment are in use.\n\n## Additional information\n\n**[OWASP-A6](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A6-Security_Misconfiguration)**\n\n**[Flask Security](https://flask-security.readthedocs.io/en/develop/configuration.html)**\n\n**[Flask Security Considerations](https://flask.palletsprojects.com/en/1.1.x/security/#security-considerations)**\n\n**[Flask Configuration](https://flask.palletsprojects.com/en/1.1.x/api/#configuration)**\n", "internal_id": "flask-misconfiguration-recommended/67124ef1445e7317542fa000c45cd6fb", "severity": "moderate", "owasp_category": "a6-misconfiguration", "category": "Security Misconfiguration", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "", "repositoryName": "vulpy", "repositoryUri": "https://github.com/fportantier/vulpy", "revisionId": "5249cc8b05a1c37f6b2f757b1cf16a509c327122", "branch": "master", "invokedBy": "Fabian Martinez Portantier <fportantier@securetia.com>", "pullRequest": false, "botUser": false}, "name": "Security Misconfiguration with the config `SESSION_COOKIE_SECURE` not set to the recommended value `True` for production use.", "tags": "Scan", "fileName": "file:///home/ec2-user/vulnerableapps/vulpy/good/vulpy-ssl.py", "DATA_TYPE": "OSS_SCAN", "lineNumber": 1, "ruleId": "flask-misconfiguration-recommended", "ruleName": "Security Misconfiguration", "contextText": "#!/usr/bin/env python3\n", "snippetText": "#!/usr/bin/env python3\n\nfrom flask import Flask, g, redirect, request\n\n"}, "tags": []}, {"app": "vulpy", "type": "extscan", "title": "Consider adding Flask-Security and Flask-Talisman security extensions to your Flask apps.", "description": "Flask-Security allows you to quickly add common security mechanisms to your Flask application. Flask-Social can also be used to add social or OAuth login and connection management.\n\n## Additional information\n\n**[OWASP-A6](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A6-Security_Misconfiguration)**\n\n**[Flask Security](https://flask-security.readthedocs.io/en/develop/index.html)**\n\n**[Flask Configuration](https://flask.palletsprojects.com/en/1.1.x/api/#configuration)**\n\n**[Flask Talisman](https://github.com/GoogleCloudPlatform/flask-talisman)**\n", "internal_id": "flask-misconfiguration-controls/67124ef1445e7317542fa000c45cd6fb", "severity": "info", "owasp_category": "a6-misconfiguration", "category": "Missing Security Controls", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "", "repositoryName": "vulpy", "repositoryUri": "https://github.com/fportantier/vulpy", "revisionId": "5249cc8b05a1c37f6b2f757b1cf16a509c327122", "branch": "master", "invokedBy": "Fabian Martinez Portantier <fportantier@securetia.com>", "pullRequest": false, "botUser": false}, "name": "Consider adding Flask-Security and Flask-Talisman security extensions to your Flask apps.", "tags": "Scan", "fileName": "file:///home/ec2-user/vulnerableapps/vulpy/good/vulpy-ssl.py", "DATA_TYPE": "OSS_SCAN", "lineNumber": 1, "ruleId": "flask-misconfiguration-controls", "ruleName": "Missing Security Controls", "contextText": "#!/usr/bin/env python3\n", "snippetText": "#!/usr/bin/env python3\n\nfrom flask import Flask, g, redirect, request\n\n"}, "tags": []}, {"app": "vulpy", "type": "extscan", "title": "Security Misconfiguration with the config `SECRET_KEY` set to a static value `123a****`.", "description": "Flask application is not configured correctly for deployment to production and live environments. Default settings that are more appropriate for development environment are in use.\n\n## Additional information\n\n**[OWASP-A6](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A6-Security_Misconfiguration)**\n\n**[Flask Security](https://flask-security.readthedocs.io/en/develop/configuration.html)**\n\n**[Flask Security Considerations](https://flask.palletsprojects.com/en/1.1.x/security/#security-considerations)**\n\n**[Flask Configuration](https://flask.palletsprojects.com/en/1.1.x/api/#configuration)**\n", "internal_id": "flask-misconfiguration-static/a89c20f4c43df0f637e0b8909f73c976", "severity": "info", "owasp_category": "a6-misconfiguration", "category": "Security Misconfiguration", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "", "repositoryName": "vulpy", "repositoryUri": "https://github.com/fportantier/vulpy", "revisionId": "5249cc8b05a1c37f6b2f757b1cf16a509c327122", "branch": "master", "invokedBy": "Fabian Martinez Portantier <fportantier@securetia.com>", "pullRequest": false, "botUser": false}, "name": "Security Misconfiguration with the config `SECRET_KEY` set to a static value `123a****`.", "tags": "Scan", "fileName": "file:///home/ec2-user/vulnerableapps/vulpy/good/vulpy.py", "DATA_TYPE": "OSS_SCAN", "lineNumber": 17, "ruleId": "flask-misconfiguration-static", "ruleName": "Security Misconfiguration", "contextText": "app.config['SECRET_KEY'] = '123aa8a93bdde342c871564a62282af857bda14b3359fde95d0c5e4b321610c1'\n", "snippetText": "app = Flask('vulpy')\napp.config['SECRET_KEY'] = '123aa8a93bdde342c871564a62282af857bda14b3359fde95d0c5e4b321610c1'\n\napp.register_blueprint(mod_hello, url_prefix='/hello')\n"}, "tags": []}, {"app": "vulpy", "type": "extscan", "title": "Security Misconfiguration with the config `PREFERRED_URL_SCHEME` not set to the recommended value `https` for production use.", "description": "Flask application is not configured correctly for deployment to production and live environments. Default settings that are more appropriate for development environment are in use.\n\n## Additional information\n\n**[OWASP-A6](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A6-Security_Misconfiguration)**\n\n**[Flask Security](https://flask-security.readthedocs.io/en/develop/configuration.html)**\n\n**[Flask Security Considerations](https://flask.palletsprojects.com/en/1.1.x/security/#security-considerations)**\n\n**[Flask Configuration](https://flask.palletsprojects.com/en/1.1.x/api/#configuration)**\n", "internal_id": "flask-misconfiguration-recommended/fdce14c2f1bbfb4eb3dbfc344c2047e1", "severity": "moderate", "owasp_category": "a6-misconfiguration", "category": "Security Misconfiguration", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "", "repositoryName": "vulpy", "repositoryUri": "https://github.com/fportantier/vulpy", "revisionId": "5249cc8b05a1c37f6b2f757b1cf16a509c327122", "branch": "master", "invokedBy": "Fabian Martinez Portantier <fportantier@securetia.com>", "pullRequest": false, "botUser": false}, "name": "Security Misconfiguration with the config `PREFERRED_URL_SCHEME` not set to the recommended value `https` for production use.", "tags": "Scan", "fileName": "file:///home/ec2-user/vulnerableapps/vulpy/good/vulpy.py", "DATA_TYPE": "OSS_SCAN", "lineNumber": 1, "ruleId": "flask-misconfiguration-recommended", "ruleName": "Security Misconfiguration", "contextText": "#!/usr/bin/env python3\n", "snippetText": "#!/usr/bin/env python3\n\nfrom pathlib import Path\n\n"}, "tags": []}, {"app": "vulpy", "type": "extscan", "title": "Security Misconfiguration with the config `SESSION_COOKIE_SECURE` not set to the recommended value `True` for production use.", "description": "Flask application is not configured correctly for deployment to production and live environments. Default settings that are more appropriate for development environment are in use.\n\n## Additional information\n\n**[OWASP-A6](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A6-Security_Misconfiguration)**\n\n**[Flask Security](https://flask-security.readthedocs.io/en/develop/configuration.html)**\n\n**[Flask Security Considerations](https://flask.palletsprojects.com/en/1.1.x/security/#security-considerations)**\n\n**[Flask Configuration](https://flask.palletsprojects.com/en/1.1.x/api/#configuration)**\n", "internal_id": "flask-misconfiguration-recommended/fdce14c2f1bbfb4eb3dbfc344c2047e1", "severity": "moderate", "owasp_category": "a6-misconfiguration", "category": "Security Misconfiguration", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "", "repositoryName": "vulpy", "repositoryUri": "https://github.com/fportantier/vulpy", "revisionId": "5249cc8b05a1c37f6b2f757b1cf16a509c327122", "branch": "master", "invokedBy": "Fabian Martinez Portantier <fportantier@securetia.com>", "pullRequest": false, "botUser": false}, "name": "Security Misconfiguration with the config `SESSION_COOKIE_SECURE` not set to the recommended value `True` for production use.", "tags": "Scan", "fileName": "file:///home/ec2-user/vulnerableapps/vulpy/good/vulpy.py", "DATA_TYPE": "OSS_SCAN", "lineNumber": 1, "ruleId": "flask-misconfiguration-recommended", "ruleName": "Security Misconfiguration", "contextText": "#!/usr/bin/env python3\n", "snippetText": "#!/usr/bin/env python3\n\nfrom pathlib import Path\n\n"}, "tags": []}, {"app": "vulpy", "type": "extscan", "title": "Consider adding Flask-Security and Flask-Talisman security extensions to your Flask apps.", "description": "Flask-Security allows you to quickly add common security mechanisms to your Flask application. Flask-Social can also be used to add social or OAuth login and connection management.\n\n## Additional information\n\n**[OWASP-A6](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A6-Security_Misconfiguration)**\n\n**[Flask Security](https://flask-security.readthedocs.io/en/develop/index.html)**\n\n**[Flask Configuration](https://flask.palletsprojects.com/en/1.1.x/api/#configuration)**\n\n**[Flask Talisman](https://github.com/GoogleCloudPlatform/flask-talisman)**\n", "internal_id": "flask-misconfiguration-controls/fdce14c2f1bbfb4eb3dbfc344c2047e1", "severity": "info", "owasp_category": "a6-misconfiguration", "category": "Missing Security Controls", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "", "repositoryName": "vulpy", "repositoryUri": "https://github.com/fportantier/vulpy", "revisionId": "5249cc8b05a1c37f6b2f757b1cf16a509c327122", "branch": "master", "invokedBy": "Fabian Martinez Portantier <fportantier@securetia.com>", "pullRequest": false, "botUser": false}, "name": "Consider adding Flask-Security and Flask-Talisman security extensions to your Flask apps.", "tags": "Scan", "fileName": "file:///home/ec2-user/vulnerableapps/vulpy/good/vulpy.py", "DATA_TYPE": "OSS_SCAN", "lineNumber": 1, "ruleId": "flask-misconfiguration-controls", "ruleName": "Missing Security Controls", "contextText": "#!/usr/bin/env python3\n", "snippetText": "#!/usr/bin/env python3\n\nfrom pathlib import Path\n\n"}, "tags": []}, {"app": "vulpy", "type": "extscan", "title": "Security Misconfiguration with the config `SECRET_KEY` set to a static value `aaaa****`.", "description": "Flask application is not configured correctly for deployment to production and live environments. Default settings that are more appropriate for development environment are in use.\n\n## Additional information\n\n**[OWASP-A6](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A6-Security_Misconfiguration)**\n\n**[Flask Security](https://flask-security.readthedocs.io/en/develop/configuration.html)**\n\n**[Flask Security Considerations](https://flask.palletsprojects.com/en/1.1.x/security/#security-considerations)**\n\n**[Flask Configuration](https://flask.palletsprojects.com/en/1.1.x/api/#configuration)**\n", "internal_id": "flask-misconfiguration-static/30c75317e196ff9f7659532025c46f0f", "severity": "info", "owasp_category": "a6-misconfiguration", "category": "Security Misconfiguration", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "", "repositoryName": "vulpy", "repositoryUri": "https://github.com/fportantier/vulpy", "revisionId": "5249cc8b05a1c37f6b2f757b1cf16a509c327122", "branch": "master", "invokedBy": "Fabian Martinez Portantier <fportantier@securetia.com>", "pullRequest": false, "botUser": false}, "name": "Security Misconfiguration with the config `SECRET_KEY` set to a static value `aaaa****`.", "tags": "Scan", "fileName": "file:///home/ec2-user/vulnerableapps/vulpy/bad/vulpy-ssl.py", "DATA_TYPE": "OSS_SCAN", "lineNumber": 13, "ruleId": "flask-misconfiguration-static", "ruleName": "Security Misconfiguration", "contextText": "app.config['SECRET_KEY'] = 'aaaaaaa'\n", "snippetText": "app = Flask('vulpy')\napp.config['SECRET_KEY'] = 'aaaaaaa'\n\napp.register_blueprint(mod_hello, url_prefix='/hello')\n"}, "tags": []}, {"app": "vulpy", "type": "extscan", "title": "Security Misconfiguration with the config `PREFERRED_URL_SCHEME` not set to the recommended value `https` for production use.", "description": "Flask application is not configured correctly for deployment to production and live environments. Default settings that are more appropriate for development environment are in use.\n\n## Additional information\n\n**[OWASP-A6](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A6-Security_Misconfiguration)**\n\n**[Flask Security](https://flask-security.readthedocs.io/en/develop/configuration.html)**\n\n**[Flask Security Considerations](https://flask.palletsprojects.com/en/1.1.x/security/#security-considerations)**\n\n**[Flask Configuration](https://flask.palletsprojects.com/en/1.1.x/api/#configuration)**\n", "internal_id": "flask-misconfiguration-recommended/72f3c4eb36b6756177817b3d970889fb", "severity": "moderate", "owasp_category": "a6-misconfiguration", "category": "Security Misconfiguration", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "", "repositoryName": "vulpy", "repositoryUri": "https://github.com/fportantier/vulpy", "revisionId": "5249cc8b05a1c37f6b2f757b1cf16a509c327122", "branch": "master", "invokedBy": "Fabian Martinez Portantier <fportantier@securetia.com>", "pullRequest": false, "botUser": false}, "name": "Security Misconfiguration with the config `PREFERRED_URL_SCHEME` not set to the recommended value `https` for production use.", "tags": "Scan", "fileName": "file:///home/ec2-user/vulnerableapps/vulpy/bad/vulpy-ssl.py", "DATA_TYPE": "OSS_SCAN", "lineNumber": 1, "ruleId": "flask-misconfiguration-recommended", "ruleName": "Security Misconfiguration", "contextText": "#!/usr/bin/env python3\n", "snippetText": "#!/usr/bin/env python3\n\nfrom flask import Flask, g, redirect, request\n\n"}, "tags": []}, {"app": "vulpy", "type": "extscan", "title": "Security Misconfiguration with the config `SESSION_COOKIE_SECURE` not set to the recommended value `True` for production use.", "description": "Flask application is not configured correctly for deployment to production and live environments. Default settings that are more appropriate for development environment are in use.\n\n## Additional information\n\n**[OWASP-A6](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A6-Security_Misconfiguration)**\n\n**[Flask Security](https://flask-security.readthedocs.io/en/develop/configuration.html)**\n\n**[Flask Security Considerations](https://flask.palletsprojects.com/en/1.1.x/security/#security-considerations)**\n\n**[Flask Configuration](https://flask.palletsprojects.com/en/1.1.x/api/#configuration)**\n", "internal_id": "flask-misconfiguration-recommended/72f3c4eb36b6756177817b3d970889fb", "severity": "moderate", "owasp_category": "a6-misconfiguration", "category": "Security Misconfiguration", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "", "repositoryName": "vulpy", "repositoryUri": "https://github.com/fportantier/vulpy", "revisionId": "5249cc8b05a1c37f6b2f757b1cf16a509c327122", "branch": "master", "invokedBy": "Fabian Martinez Portantier <fportantier@securetia.com>", "pullRequest": false, "botUser": false}, "name": "Security Misconfiguration with the config `SESSION_COOKIE_SECURE` not set to the recommended value `True` for production use.", "tags": "Scan", "fileName": "file:///home/ec2-user/vulnerableapps/vulpy/bad/vulpy-ssl.py", "DATA_TYPE": "OSS_SCAN", "lineNumber": 1, "ruleId": "flask-misconfiguration-recommended", "ruleName": "Security Misconfiguration", "contextText": "#!/usr/bin/env python3\n", "snippetText": "#!/usr/bin/env python3\n\nfrom flask import Flask, g, redirect, request\n\n"}, "tags": []}, {"app": "vulpy", "type": "extscan", "title": "Consider adding Flask-Security and Flask-Talisman security extensions to your Flask apps.", "description": "Flask-Security allows you to quickly add common security mechanisms to your Flask application. Flask-Social can also be used to add social or OAuth login and connection management.\n\n## Additional information\n\n**[OWASP-A6](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A6-Security_Misconfiguration)**\n\n**[Flask Security](https://flask-security.readthedocs.io/en/develop/index.html)**\n\n**[Flask Configuration](https://flask.palletsprojects.com/en/1.1.x/api/#configuration)**\n\n**[Flask Talisman](https://github.com/GoogleCloudPlatform/flask-talisman)**\n", "internal_id": "flask-misconfiguration-controls/72f3c4eb36b6756177817b3d970889fb", "severity": "info", "owasp_category": "a6-misconfiguration", "category": "Missing Security Controls", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "", "repositoryName": "vulpy", "repositoryUri": "https://github.com/fportantier/vulpy", "revisionId": "5249cc8b05a1c37f6b2f757b1cf16a509c327122", "branch": "master", "invokedBy": "Fabian Martinez Portantier <fportantier@securetia.com>", "pullRequest": false, "botUser": false}, "name": "Consider adding Flask-Security and Flask-Talisman security extensions to your Flask apps.", "tags": "Scan", "fileName": "file:///home/ec2-user/vulnerableapps/vulpy/bad/vulpy-ssl.py", "DATA_TYPE": "OSS_SCAN", "lineNumber": 1, "ruleId": "flask-misconfiguration-controls", "ruleName": "Missing Security Controls", "contextText": "#!/usr/bin/env python3\n", "snippetText": "#!/usr/bin/env python3\n\nfrom flask import Flask, g, redirect, request\n\n"}, "tags": []}, {"app": "vulpy", "type": "extscan", "title": "Security Misconfiguration with the config `SECRET_KEY` set to a static value `aaaa****`.", "description": "Flask application is not configured correctly for deployment to production and live environments. Default settings that are more appropriate for development environment are in use.\n\n## Additional information\n\n**[OWASP-A6](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A6-Security_Misconfiguration)**\n\n**[Flask Security](https://flask-security.readthedocs.io/en/develop/configuration.html)**\n\n**[Flask Security Considerations](https://flask.palletsprojects.com/en/1.1.x/security/#security-considerations)**\n\n**[Flask Configuration](https://flask.palletsprojects.com/en/1.1.x/api/#configuration)**\n", "internal_id": "flask-misconfiguration-static/09d51f94cb21582fb3c56f73c716045d", "severity": "info", "owasp_category": "a6-misconfiguration", "category": "Security Misconfiguration", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "", "repositoryName": "vulpy", "repositoryUri": "https://github.com/fportantier/vulpy", "revisionId": "5249cc8b05a1c37f6b2f757b1cf16a509c327122", "branch": "master", "invokedBy": "Fabian Martinez Portantier <fportantier@securetia.com>", "pullRequest": false, "botUser": false}, "name": "Security Misconfiguration with the config `SECRET_KEY` set to a static value `aaaa****`.", "tags": "Scan", "fileName": "file:///home/ec2-user/vulnerableapps/vulpy/bad/vulpy.py", "DATA_TYPE": "OSS_SCAN", "lineNumber": 16, "ruleId": "flask-misconfiguration-static", "ruleName": "Security Misconfiguration", "contextText": "app.config['SECRET_KEY'] = 'aaaaaaa'\n", "snippetText": "app = Flask('vulpy')\napp.config['SECRET_KEY'] = 'aaaaaaa'\n\napp.register_blueprint(mod_hello, url_prefix='/hello')\n"}, "tags": []}, {"app": "vulpy", "type": "extscan", "title": "Security Misconfiguration with the config `PREFERRED_URL_SCHEME` not set to the recommended value `https` for production use.", "description": "Flask application is not configured correctly for deployment to production and live environments. Default settings that are more appropriate for development environment are in use.\n\n## Additional information\n\n**[OWASP-A6](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A6-Security_Misconfiguration)**\n\n**[Flask Security](https://flask-security.readthedocs.io/en/develop/configuration.html)**\n\n**[Flask Security Considerations](https://flask.palletsprojects.com/en/1.1.x/security/#security-considerations)**\n\n**[Flask Configuration](https://flask.palletsprojects.com/en/1.1.x/api/#configuration)**\n", "internal_id": "flask-misconfiguration-recommended/9b49a78911c95c733ffc08b0265c97b7", "severity": "moderate", "owasp_category": "a6-misconfiguration", "category": "Security Misconfiguration", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "", "repositoryName": "vulpy", "repositoryUri": "https://github.com/fportantier/vulpy", "revisionId": "5249cc8b05a1c37f6b2f757b1cf16a509c327122", "branch": "master", "invokedBy": "Fabian Martinez Portantier <fportantier@securetia.com>", "pullRequest": false, "botUser": false}, "name": "Security Misconfiguration with the config `PREFERRED_URL_SCHEME` not set to the recommended value `https` for production use.", "tags": "Scan", "fileName": "file:///home/ec2-user/vulnerableapps/vulpy/bad/vulpy.py", "DATA_TYPE": "OSS_SCAN", "lineNumber": 1, "ruleId": "flask-misconfiguration-recommended", "ruleName": "Security Misconfiguration", "contextText": "#!/usr/bin/env python3\n", "snippetText": "#!/usr/bin/env python3\n\nfrom pathlib import Path\n\n"}, "tags": []}, {"app": "vulpy", "type": "extscan", "title": "Security Misconfiguration with the config `SESSION_COOKIE_SECURE` not set to the recommended value `True` for production use.", "description": "Flask application is not configured correctly for deployment to production and live environments. Default settings that are more appropriate for development environment are in use.\n\n## Additional information\n\n**[OWASP-A6](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A6-Security_Misconfiguration)**\n\n**[Flask Security](https://flask-security.readthedocs.io/en/develop/configuration.html)**\n\n**[Flask Security Considerations](https://flask.palletsprojects.com/en/1.1.x/security/#security-considerations)**\n\n**[Flask Configuration](https://flask.palletsprojects.com/en/1.1.x/api/#configuration)**\n", "internal_id": "flask-misconfiguration-recommended/9b49a78911c95c733ffc08b0265c97b7", "severity": "moderate", "owasp_category": "a6-misconfiguration", "category": "Security Misconfiguration", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "", "repositoryName": "vulpy", "repositoryUri": "https://github.com/fportantier/vulpy", "revisionId": "5249cc8b05a1c37f6b2f757b1cf16a509c327122", "branch": "master", "invokedBy": "Fabian Martinez Portantier <fportantier@securetia.com>", "pullRequest": false, "botUser": false}, "name": "Security Misconfiguration with the config `SESSION_COOKIE_SECURE` not set to the recommended value `True` for production use.", "tags": "Scan", "fileName": "file:///home/ec2-user/vulnerableapps/vulpy/bad/vulpy.py", "DATA_TYPE": "OSS_SCAN", "lineNumber": 1, "ruleId": "flask-misconfiguration-recommended", "ruleName": "Security Misconfiguration", "contextText": "#!/usr/bin/env python3\n", "snippetText": "#!/usr/bin/env python3\n\nfrom pathlib import Path\n\n"}, "tags": []}, {"app": "vulpy", "type": "extscan", "title": "Consider adding Flask-Security and Flask-Talisman security extensions to your Flask apps.", "description": "Flask-Security allows you to quickly add common security mechanisms to your Flask application. Flask-Social can also be used to add social or OAuth login and connection management.\n\n## Additional information\n\n**[OWASP-A6](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A6-Security_Misconfiguration)**\n\n**[Flask Security](https://flask-security.readthedocs.io/en/develop/index.html)**\n\n**[Flask Configuration](https://flask.palletsprojects.com/en/1.1.x/api/#configuration)**\n\n**[Flask Talisman](https://github.com/GoogleCloudPlatform/flask-talisman)**\n", "internal_id": "flask-misconfiguration-controls/9b49a78911c95c733ffc08b0265c97b7", "severity": "info", "owasp_category": "a6-misconfiguration", "category": "Missing Security Controls", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "", "repositoryName": "vulpy", "repositoryUri": "https://github.com/fportantier/vulpy", "revisionId": "5249cc8b05a1c37f6b2f757b1cf16a509c327122", "branch": "master", "invokedBy": "Fabian Martinez Portantier <fportantier@securetia.com>", "pullRequest": false, "botUser": false}, "name": "Consider adding Flask-Security and Flask-Talisman security extensions to your Flask apps.", "tags": "Scan", "fileName": "file:///home/ec2-user/vulnerableapps/vulpy/bad/vulpy.py", "DATA_TYPE": "OSS_SCAN", "lineNumber": 1, "ruleId": "flask-misconfiguration-controls", "ruleName": "Missing Security Controls", "contextText": "#!/usr/bin/env python3\n", "snippetText": "#!/usr/bin/env python3\n\nfrom pathlib import Path\n\n"}, "tags": []}]}