{
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "Security Audit for Infrastructure",
          "rules": [
            {
              "id": "CKV_AWS_16",
              "help": {
                "text": "Ensure all data stored in the RDS is securely encrypted at rest.",
                "markdown": "Ensure all data stored in the RDS is securely encrypted at rest."
              },
              "name": "RDSEncryption",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure all data stored in the RDS is securely encrypted at rest."
              },
              "helpUri": "https://slscan.io?q=CKV_AWS_16",
              "shortDescription": {
                "text": "Ensure all data stored in the RDS is securely encrypted at rest."
              }
            },
            {
              "id": "CKV_AWS_17",
              "help": {
                "text": "Ensure all data stored in the RDS bucket is not public accessible.",
                "markdown": "Ensure all data stored in the RDS bucket is not public accessible."
              },
              "name": "RDSPubliclyAccessible",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure all data stored in the RDS bucket is not public accessible."
              },
              "helpUri": "https://slscan.io?q=CKV_AWS_17",
              "shortDescription": {
                "text": "Ensure all data stored in the RDS bucket is not public accessible."
              }
            },
            {
              "id": "CKV_AWS_79",
              "help": {
                "text": "Ensure Instance Metadata Service Version 1 is not enabled.",
                "markdown": "Ensure Instance Metadata Service Version 1 is not enabled."
              },
              "name": "IMDSv1Disabled",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure Instance Metadata Service Version 1 is not enabled."
              },
              "helpUri": "https://slscan.io?q=CKV_AWS_79",
              "shortDescription": {
                "text": "Ensure Instance Metadata Service Version 1 is not enabled."
              }
            },
            {
              "id": "CKV_AWS_8",
              "help": {
                "text": "Ensure all data stored in the Launch configuration EBS is securely encrypted.",
                "markdown": "Ensure all data stored in the Launch configuration EBS is securely encrypted."
              },
              "name": "LaunchConfigurationEBSEncryption",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure all data stored in the Launch configuration EBS is securely encrypted."
              },
              "helpUri": "https://slscan.io?q=CKV_AWS_8",
              "shortDescription": {
                "text": "Ensure all data stored in the Launch configuration EBS is securely encrypted."
              }
            },
            {
              "id": "CKV_AWS_46",
              "help": {
                "text": "Ensure no hard coded AWS access key and secret key exists in EC2 user data.",
                "markdown": "Ensure no hard coded AWS access key and secret key exists in EC2 user data."
              },
              "name": "EC2Credentials",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure no hard coded AWS access key and secret key exists in EC2 user data."
              },
              "helpUri": "https://slscan.io?q=CKV_AWS_46",
              "shortDescription": {
                "text": "Ensure no hard coded AWS access key and secret key exists in EC2 user data."
              }
            },
            {
              "id": "CKV_AWS_3",
              "help": {
                "text": "Ensure all data stored in the EBS is securely encrypted.",
                "markdown": "Ensure all data stored in the EBS is securely encrypted."
              },
              "name": "EBSEncryption",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure all data stored in the EBS is securely encrypted."
              },
              "helpUri": "https://slscan.io?q=CKV_AWS_3",
              "shortDescription": {
                "text": "Ensure all data stored in the EBS is securely encrypted."
              }
            },
            {
              "id": "CKV_AWS_24",
              "help": {
                "text": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22.",
                "markdown": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22."
              },
              "name": "SecurityGroupUnrestrictedIngress22",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22."
              },
              "helpUri": "https://slscan.io?q=CKV_AWS_24",
              "shortDescription": {
                "text": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22."
              }
            },
            {
              "id": "CKV_AWS_18",
              "help": {
                "text": "Ensure the S3 bucket has access logging enabled.",
                "markdown": "Ensure the S3 bucket has access logging enabled."
              },
              "name": "S3AccessLogs",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure the S3 bucket has access logging enabled."
              },
              "helpUri": "https://slscan.io?q=CKV_AWS_18",
              "shortDescription": {
                "text": "Ensure the S3 bucket has access logging enabled."
              }
            },
            {
              "id": "CKV_AWS_19",
              "help": {
                "text": "Ensure all data stored in the S3 bucket is securely encrypted at rest.",
                "markdown": "Ensure all data stored in the S3 bucket is securely encrypted at rest."
              },
              "name": "S3Encryption",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure all data stored in the S3 bucket is securely encrypted at rest."
              },
              "helpUri": "https://slscan.io?q=CKV_AWS_19",
              "shortDescription": {
                "text": "Ensure all data stored in the S3 bucket is securely encrypted at rest."
              }
            },
            {
              "id": "CKV_AWS_52",
              "help": {
                "text": "Ensure S3 bucket has MFA delete enabled.",
                "markdown": "Ensure S3 bucket has MFA delete enabled."
              },
              "name": "S3MFADelete",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "fullDescription": {
                "text": "Ensure S3 bucket has MFA delete enabled."
              },
              "helpUri": "https://slscan.io?q=CKV_AWS_52",
              "shortDescription": {
                "text": "Ensure S3 bucket has MFA delete enabled."
              }
            },
            {
              "id": "CKV_AWS_21",
              "help": {
                "text": "Ensure all data stored in the S3 bucket have versioning enabled.",
                "markdown": "Ensure all data stored in the S3 bucket have versioning enabled."
              },
              "name": "S3Versioning",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Ensure all data stored in the S3 bucket have versioning enabled."
              },
              "helpUri": "https://slscan.io?q=CKV_AWS_21",
              "shortDescription": {
                "text": "Ensure all data stored in the S3 bucket have versioning enabled."
              }
            },
            {
              "id": "CKV_AWS_33",
              "help": {
                "text": "Ensure ECR image scanning on push is enabled.",
                "markdown": "Ensure ECR image scanning on push is enabled."
              },
              "name": "ECRImageScanning",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "fullDescription": {
                "text": "Ensure ECR image scanning on push is enabled."
              },
              "helpUri": "https://slscan.io?q=CKV_AWS_33",
              "shortDescription": {
                "text": "Ensure ECR image scanning on push is enabled."
              }
            },
            {
              "id": "CKV_AWS_51",
              "help": {
                "text": "Ensure ECR Image Tags are immutable.",
                "markdown": "Ensure ECR Image Tags are immutable."
              },
              "name": "ECRImmutableTags",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure ECR Image Tags are immutable."
              },
              "helpUri": "https://slscan.io?q=CKV_AWS_51",
              "shortDescription": {
                "text": "Ensure ECR Image Tags are immutable."
              }
            },
            {
              "id": "CKV_AWS_37",
              "help": {
                "text": "Ensure Amazon EKS control plane logging enabled for all log types.",
                "markdown": "Ensure Amazon EKS control plane logging enabled for all log types."
              },
              "name": "EKSControlPlaneLogging",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure Amazon EKS control plane logging enabled for all log types."
              },
              "helpUri": "https://slscan.io?q=CKV_AWS_37",
              "shortDescription": {
                "text": "Ensure Amazon EKS control plane logging enabled for all log types."
              }
            },
            {
              "id": "CKV_AWS_39",
              "help": {
                "text": "Ensure Amazon EKS public endpoint disabled.",
                "markdown": "Ensure Amazon EKS public endpoint disabled."
              },
              "name": "EKSPublicAccess",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure Amazon EKS public endpoint disabled."
              },
              "helpUri": "https://slscan.io?q=CKV_AWS_39",
              "shortDescription": {
                "text": "Ensure Amazon EKS public endpoint disabled."
              }
            },
            {
              "id": "CKV_AWS_38",
              "help": {
                "text": "Ensure Amazon EKS public endpoint not accessible to 0.0.0.0/0.",
                "markdown": "Ensure Amazon EKS public endpoint not accessible to 0.0.0.0/0."
              },
              "name": "EKSPublicAccessCIDR",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure Amazon EKS public endpoint not accessible to 0.0.0.0/0."
              },
              "helpUri": "https://slscan.io?q=CKV_AWS_38",
              "shortDescription": {
                "text": "Ensure Amazon EKS public endpoint not accessible to 0.0.0.0/0."
              }
            },
            {
              "id": "CKV_AWS_58",
              "help": {
                "text": "Ensure EKS Cluster has Secrets Encryption Enabled.",
                "markdown": "Ensure EKS Cluster has Secrets Encryption Enabled."
              },
              "name": "EKSSecretsEncryption",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure EKS Cluster has Secrets Encryption Enabled."
              },
              "helpUri": "https://slscan.io?q=CKV_AWS_58",
              "shortDescription": {
                "text": "Ensure EKS Cluster has Secrets Encryption Enabled."
              }
            },
            {
              "id": "CKV_AWS_5",
              "help": {
                "text": "Ensure all data stored in the Elasticsearch is securely encrypted at rest.",
                "markdown": "Ensure all data stored in the Elasticsearch is securely encrypted at rest."
              },
              "name": "ElasticsearchEncryption",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure all data stored in the Elasticsearch is securely encrypted at rest."
              },
              "helpUri": "https://slscan.io?q=CKV_AWS_5",
              "shortDescription": {
                "text": "Ensure all data stored in the Elasticsearch is securely encrypted at rest."
              }
            },
            {
              "id": "CKV_AWS_40",
              "help": {
                "text": "Ensure IAM policies are attached only to groups or roles (Reducing access management complexity may in-turn reduce opportunity for a principal to inadvertently receive or retain excessive privileges.).",
                "markdown": "Ensure IAM policies are attached only to groups or roles (Reducing access management complexity may in-turn reduce opportunity for a principal to inadvertently receive or retain excessive privileges.)."
              },
              "name": "IAMPolicyAttachedToGroupOrRoles",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Ensure IAM policies are attached only to groups or roles (Reducing access management complexity may in-turn reduce opportunity for a principal to inadvertently receive or retain excessive privileges.)."
              },
              "helpUri": "https://slscan.io?q=CKV_AWS_40",
              "shortDescription": {
                "text": "Ensure IAM policies are attached only to groups or roles (Reducing access management complexity may in-turn reduce opportunity for a principal to inadvertently receive or retain excessive privileges.)."
              }
            },
            {
              "id": "CKV_AWS_7",
              "help": {
                "text": "Ensure rotation for customer created CMKs is enabled.",
                "markdown": "Ensure rotation for customer created CMKs is enabled."
              },
              "name": "KMSRotation",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure rotation for customer created CMKs is enabled."
              },
              "helpUri": "https://slscan.io?q=CKV_AWS_7",
              "shortDescription": {
                "text": "Ensure rotation for customer created CMKs is enabled."
              }
            },
            {
              "id": "CKV_AWS_45",
              "help": {
                "text": "Ensure no hard coded AWS access key and secret key exists in lambda environment.",
                "markdown": "Ensure no hard coded AWS access key and secret key exists in lambda environment."
              },
              "name": "LambdaEnvironmentCredentials",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure no hard coded AWS access key and secret key exists in lambda environment."
              },
              "helpUri": "https://slscan.io?q=CKV_AWS_45",
              "shortDescription": {
                "text": "Ensure no hard coded AWS access key and secret key exists in lambda environment."
              }
            },
            {
              "id": "CKV_AWS_50",
              "help": {
                "text": "X-ray tracing is enabled for Lambda.",
                "markdown": "X-ray tracing is enabled for Lambda."
              },
              "name": "LambdaXrayEnabled",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "X-ray tracing is enabled for Lambda."
              },
              "helpUri": "https://slscan.io?q=CKV_AWS_50",
              "shortDescription": {
                "text": "X-ray tracing is enabled for Lambda."
              }
            },
            {
              "id": "CKV_AWS_44",
              "help": {
                "text": "Ensure Neptune storage is securely encrypted.",
                "markdown": "Ensure Neptune storage is securely encrypted."
              },
              "name": "NeptuneClusterStorageEncrypted",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure Neptune storage is securely encrypted."
              },
              "helpUri": "https://slscan.io?q=CKV_AWS_44",
              "shortDescription": {
                "text": "Ensure Neptune storage is securely encrypted."
              }
            },
            {
              "id": "CKV_AWS_41",
              "help": {
                "text": "Ensure no hard coded AWS access key and and secret key exists in provider.",
                "markdown": "Ensure no hard coded AWS access key and and secret key exists in provider."
              },
              "name": "credentials",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure no hard coded AWS access key and and secret key exists in provider."
              },
              "helpUri": "https://slscan.io?q=CKV_AWS_41",
              "shortDescription": {
                "text": "Ensure no hard coded AWS access key and and secret key exists in provider."
              }
            },
            {
              "id": "CKV_AWS_20",
              "help": {
                "text": "S3 Bucket has an ACL defined which allows public READ access.",
                "markdown": "S3 Bucket has an ACL defined which allows public READ access."
              },
              "name": "S3PublicACLRead",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "S3 Bucket has an ACL defined which allows public READ access."
              },
              "helpUri": "https://slscan.io?q=CKV_AWS_20",
              "shortDescription": {
                "text": "S3 Bucket has an ACL defined which allows public READ access."
              }
            },
            {
              "id": "CKV_AZURE_6",
              "help": {
                "text": "Ensure AKS has an API Server Authorized IP Ranges enabled.",
                "markdown": "Ensure AKS has an API Server Authorized IP Ranges enabled."
              },
              "name": "AKSApiServerAuthorizedIpRanges",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure AKS has an API Server Authorized IP Ranges enabled."
              },
              "helpUri": "https://slscan.io?q=CKV_AZURE_6",
              "shortDescription": {
                "text": "Ensure AKS has an API Server Authorized IP Ranges enabled."
              }
            },
            {
              "id": "CKV_AZURE_8",
              "help": {
                "text": "Ensure Kube Dashboard is disabled.",
                "markdown": "Ensure Kube Dashboard is disabled."
              },
              "name": "AKSDashboardDisabled",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure Kube Dashboard is disabled."
              },
              "helpUri": "https://slscan.io?q=CKV_AZURE_8",
              "shortDescription": {
                "text": "Ensure Kube Dashboard is disabled."
              }
            },
            {
              "id": "CKV_AZURE_4",
              "help": {
                "text": "Ensure AKS logging to Azure Monitoring is Configured.",
                "markdown": "Ensure AKS logging to Azure Monitoring is Configured."
              },
              "name": "AKSLoggingEnabled",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure AKS logging to Azure Monitoring is Configured."
              },
              "helpUri": "https://slscan.io?q=CKV_AZURE_4",
              "shortDescription": {
                "text": "Ensure AKS logging to Azure Monitoring is Configured."
              }
            },
            {
              "id": "CKV_AZURE_7",
              "help": {
                "text": "Ensure AKS cluster has Network Policy configured.",
                "markdown": "Ensure AKS cluster has Network Policy configured."
              },
              "name": "AKSNetworkPolicy",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure AKS cluster has Network Policy configured."
              },
              "helpUri": "https://slscan.io?q=CKV_AZURE_7",
              "shortDescription": {
                "text": "Ensure AKS cluster has Network Policy configured."
              }
            },
            {
              "id": "CKV_AZURE_5",
              "help": {
                "text": "Ensure RBAC is enabled on AKS clusters.",
                "markdown": "Ensure RBAC is enabled on AKS clusters."
              },
              "name": "AKSRbacEnabled",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure RBAC is enabled on AKS clusters."
              },
              "helpUri": "https://slscan.io?q=CKV_AZURE_5",
              "shortDescription": {
                "text": "Ensure RBAC is enabled on AKS clusters."
              }
            },
            {
              "id": "CKV_AZURE_13",
              "help": {
                "text": "Ensure App Service Authentication is set on Azure App Service.",
                "markdown": "Ensure App Service Authentication is set on Azure App Service."
              },
              "name": "AppServiceAuthentication",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure App Service Authentication is set on Azure App Service."
              },
              "helpUri": "https://slscan.io?q=CKV_AZURE_13",
              "shortDescription": {
                "text": "Ensure App Service Authentication is set on Azure App Service."
              }
            },
            {
              "id": "CKV_AZURE_14",
              "help": {
                "text": "Ensure web app redirects all HTTP traffic to HTTPS in Azure App Service.",
                "markdown": "Ensure web app redirects all HTTP traffic to HTTPS in Azure App Service."
              },
              "name": "AppServiceHTTPSOnly",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure web app redirects all HTTP traffic to HTTPS in Azure App Service."
              },
              "helpUri": "https://slscan.io?q=CKV_AZURE_14",
              "shortDescription": {
                "text": "Ensure web app redirects all HTTP traffic to HTTPS in Azure App Service."
              }
            },
            {
              "id": "CKV_AZURE_18",
              "help": {
                "text": "Ensure that 'HTTP Version' is the latest if used to run the web app.",
                "markdown": "Ensure that 'HTTP Version' is the latest if used to run the web app."
              },
              "name": "AppServiceHttps20Enabled",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure that 'HTTP Version' is the latest if used to run the web app."
              },
              "helpUri": "https://slscan.io?q=CKV_AZURE_18",
              "shortDescription": {
                "text": "Ensure that 'HTTP Version' is the latest if used to run the web app."
              }
            },
            {
              "id": "CKV_AZURE_15",
              "help": {
                "text": "Ensure web app is using the latest version of TLS encryption.",
                "markdown": "Ensure web app is using the latest version of TLS encryption."
              },
              "name": "AppServiceMinTLSVersion",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure web app is using the latest version of TLS encryption."
              },
              "helpUri": "https://slscan.io?q=CKV_AZURE_15",
              "shortDescription": {
                "text": "Ensure web app is using the latest version of TLS encryption."
              }
            },
            {
              "id": "CKV_AZURE_17",
              "help": {
                "text": "Ensure the web app has 'Client Certificates (Incoming client certificates)' set.",
                "markdown": "Ensure the web app has 'Client Certificates (Incoming client certificates)' set."
              },
              "name": "AppServieClientCertificate",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure the web app has 'Client Certificates (Incoming client certificates)' set."
              },
              "helpUri": "https://slscan.io?q=CKV_AZURE_17",
              "shortDescription": {
                "text": "Ensure the web app has 'Client Certificates (Incoming client certificates)' set."
              }
            },
            {
              "id": "CKV_AZURE_16",
              "help": {
                "text": "Ensure that Register with Azure Active Directory is enabled on App Service.",
                "markdown": "Ensure that Register with Azure Active Directory is enabled on App Service."
              },
              "name": "AppServieIdentity",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure that Register with Azure Active Directory is enabled on App Service."
              },
              "helpUri": "https://slscan.io?q=CKV_AZURE_16",
              "shortDescription": {
                "text": "Ensure that Register with Azure Active Directory is enabled on App Service."
              }
            },
            {
              "id": "CKV_AZURE_1",
              "help": {
                "text": "Ensure Azure Instance does not use basic authentication(Use SSH Key Instead).",
                "markdown": "Ensure Azure Instance does not use basic authentication(Use SSH Key Instead)."
              },
              "name": "AzureInstancePassword",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure Azure Instance does not use basic authentication(Use SSH Key Instead)."
              },
              "helpUri": "https://slscan.io?q=CKV_AZURE_1",
              "shortDescription": {
                "text": "Ensure Azure Instance does not use basic authentication(Use SSH Key Instead)."
              }
            },
            {
              "id": "CKV_AZURE_42",
              "help": {
                "text": "Ensure the key vault is recoverable.",
                "markdown": "Ensure the key vault is recoverable."
              },
              "name": "KeyvaultRecoveryEnabled",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure the key vault is recoverable."
              },
              "helpUri": "https://slscan.io?q=CKV_AZURE_42",
              "shortDescription": {
                "text": "Ensure the key vault is recoverable."
              }
            },
            {
              "id": "CKV_AZURE_40",
              "help": {
                "text": "Ensure that the expiration date is set on all keys.",
                "markdown": "Ensure that the expiration date is set on all keys."
              },
              "name": "KeyExpirationDate",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure that the expiration date is set on all keys."
              },
              "helpUri": "https://slscan.io?q=CKV_AZURE_40",
              "shortDescription": {
                "text": "Ensure that the expiration date is set on all keys."
              }
            },
            {
              "id": "CKV_AZURE_41",
              "help": {
                "text": "Ensure that the expiration date is set on all secrets.",
                "markdown": "Ensure that the expiration date is set on all secrets."
              },
              "name": "SecretExpirationDate",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure that the expiration date is set on all secrets."
              },
              "helpUri": "https://slscan.io?q=CKV_AZURE_41",
              "shortDescription": {
                "text": "Ensure that the expiration date is set on all secrets."
              }
            },
            {
              "id": "CKV_AZURE_38",
              "help": {
                "text": "Ensure audit profile captures all the activities.",
                "markdown": "Ensure audit profile captures all the activities."
              },
              "name": "MonitorLogProfileCategories",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure audit profile captures all the activities."
              },
              "helpUri": "https://slscan.io?q=CKV_AZURE_38",
              "shortDescription": {
                "text": "Ensure audit profile captures all the activities."
              }
            },
            {
              "id": "CKV_AZURE_37",
              "help": {
                "text": "Ensure that Activity Log Retention is set 365 days or greater.",
                "markdown": "Ensure that Activity Log Retention is set 365 days or greater."
              },
              "name": "MonitorLogProfileRetentionDays",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure that Activity Log Retention is set 365 days or greater."
              },
              "helpUri": "https://slscan.io?q=CKV_AZURE_37",
              "shortDescription": {
                "text": "Ensure that Activity Log Retention is set 365 days or greater."
              }
            },
            {
              "id": "CKV_AZURE_9",
              "help": {
                "text": "Ensure that RDP access is restricted from the internet.",
                "markdown": "Ensure that RDP access is restricted from the internet."
              },
              "name": "NSGRuleRDPAccessRestricted",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure that RDP access is restricted from the internet."
              },
              "helpUri": "https://slscan.io?q=CKV_AZURE_9",
              "shortDescription": {
                "text": "Ensure that RDP access is restricted from the internet."
              }
            },
            {
              "id": "CKV_AZURE_10",
              "help": {
                "text": "Ensure that SSH access is restricted from the internet.",
                "markdown": "Ensure that SSH access is restricted from the internet."
              },
              "name": "NSGRuleSSHAccessRestricted",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure that SSH access is restricted from the internet."
              },
              "helpUri": "https://slscan.io?q=CKV_AZURE_10",
              "shortDescription": {
                "text": "Ensure that SSH access is restricted from the internet."
              }
            },
            {
              "id": "CKV_AZURE_12",
              "help": {
                "text": "Ensure that Network Security Group Flow Log retention period is 'greater than 90 days'.",
                "markdown": "Ensure that Network Security Group Flow Log retention period is 'greater than 90 days'."
              },
              "name": "NetworkWatcherFlowLogPeriod",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure that Network Security Group Flow Log retention period is 'greater than 90 days'."
              },
              "helpUri": "https://slscan.io?q=CKV_AZURE_12",
              "shortDescription": {
                "text": "Ensure that Network Security Group Flow Log retention period is 'greater than 90 days'."
              }
            },
            {
              "id": "CKV_AZURE_39",
              "help": {
                "text": "Ensure that no custom subscription owner roles are created.",
                "markdown": "Ensure that no custom subscription owner roles are created."
              },
              "name": "CutsomRoleDefinitionSubscriptionOwner",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure that no custom subscription owner roles are created."
              },
              "helpUri": "https://slscan.io?q=CKV_AZURE_39",
              "shortDescription": {
                "text": "Ensure that no custom subscription owner roles are created."
              }
            },
            {
              "id": "CKV_AZURE_19",
              "help": {
                "text": "Ensure that standard pricing tier is selected.",
                "markdown": "Ensure that standard pricing tier is selected."
              },
              "name": "SecurityCenterStandardPricing",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure that standard pricing tier is selected."
              },
              "helpUri": "https://slscan.io?q=CKV_AZURE_19",
              "shortDescription": {
                "text": "Ensure that standard pricing tier is selected."
              }
            },
            {
              "id": "CKV_AZURE_21",
              "help": {
                "text": "Ensure that 'Send email notification for high severity alerts' is set to 'On'.",
                "markdown": "Ensure that 'Send email notification for high severity alerts' is set to 'On'."
              },
              "name": "SecurityCenterContactEmailAlert",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure that 'Send email notification for high severity alerts' is set to 'On'."
              },
              "helpUri": "https://slscan.io?q=CKV_AZURE_21",
              "shortDescription": {
                "text": "Ensure that 'Send email notification for high severity alerts' is set to 'On'."
              }
            },
            {
              "id": "CKV_AZURE_22",
              "help": {
                "text": "Ensure that 'Send email notification for high severity alerts' is set to 'On'.",
                "markdown": "Ensure that 'Send email notification for high severity alerts' is set to 'On'."
              },
              "name": "SecurityCenterContactEmailAlertAdmins",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure that 'Send email notification for high severity alerts' is set to 'On'."
              },
              "helpUri": "https://slscan.io?q=CKV_AZURE_22",
              "shortDescription": {
                "text": "Ensure that 'Send email notification for high severity alerts' is set to 'On'."
              }
            },
            {
              "id": "CKV_AZURE_20",
              "help": {
                "text": "Ensure that security contact 'Phone number' is set.",
                "markdown": "Ensure that security contact 'Phone number' is set."
              },
              "name": "SecurityCenterContactPhone",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure that security contact 'Phone number' is set."
              },
              "helpUri": "https://slscan.io?q=CKV_AZURE_20",
              "shortDescription": {
                "text": "Ensure that security contact 'Phone number' is set."
              }
            },
            {
              "id": "CKV_AZURE_23",
              "help": {
                "text": "Ensure that 'Auditing' is set to 'On' for SQL servers.",
                "markdown": "Ensure that 'Auditing' is set to 'On' for SQL servers."
              },
              "name": "SQLServerAuditingEnabled",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure that 'Auditing' is set to 'On' for SQL servers."
              },
              "helpUri": "https://slscan.io?q=CKV_AZURE_23",
              "shortDescription": {
                "text": "Ensure that 'Auditing' is set to 'On' for SQL servers."
              }
            },
            {
              "id": "CKV_AZURE_24",
              "help": {
                "text": "Ensure that 'Auditing' Retention is 'greater than 90 days' for SQL servers.",
                "markdown": "Ensure that 'Auditing' Retention is 'greater than 90 days' for SQL servers."
              },
              "name": "SQLServerAuditingRetention90Days",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure that 'Auditing' Retention is 'greater than 90 days' for SQL servers."
              },
              "helpUri": "https://slscan.io?q=CKV_AZURE_24",
              "shortDescription": {
                "text": "Ensure that 'Auditing' Retention is 'greater than 90 days' for SQL servers."
              }
            },
            {
              "id": "CKV_AZURE_26",
              "help": {
                "text": "Ensure that 'Send Alerts To' is enabled for MSSQL servers.",
                "markdown": "Ensure that 'Send Alerts To' is enabled for MSSQL servers."
              },
              "name": "SQLServerEmailAlertsEnabled",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure that 'Send Alerts To' is enabled for MSSQL servers."
              },
              "helpUri": "https://slscan.io?q=CKV_AZURE_26",
              "shortDescription": {
                "text": "Ensure that 'Send Alerts To' is enabled for MSSQL servers."
              }
            },
            {
              "id": "CKV_AZURE_27",
              "help": {
                "text": "Ensure that 'Email service and co-administrators' is 'Enabled' for MSSQL servers.",
                "markdown": "Ensure that 'Email service and co-administrators' is 'Enabled' for MSSQL servers."
              },
              "name": "SQLServerEmailAlertsToAdminsEnabled",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure that 'Email service and co-administrators' is 'Enabled' for MSSQL servers."
              },
              "helpUri": "https://slscan.io?q=CKV_AZURE_27",
              "shortDescription": {
                "text": "Ensure that 'Email service and co-administrators' is 'Enabled' for MSSQL servers."
              }
            },
            {
              "id": "CKV_AZURE_25",
              "help": {
                "text": "Ensure that 'Threat Detection types' is set to 'All'.",
                "markdown": "Ensure that 'Threat Detection types' is set to 'All'."
              },
              "name": "SQLServerThreatDetectionTypes",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure that 'Threat Detection types' is set to 'All'."
              },
              "helpUri": "https://slscan.io?q=CKV_AZURE_25",
              "shortDescription": {
                "text": "Ensure that 'Threat Detection types' is set to 'All'."
              }
            },
            {
              "id": "CKV_AZURE_28",
              "help": {
                "text": "Ensure 'Enforce SSL connection' is set to 'ENABLED' for MySQL Database Server.",
                "markdown": "Ensure 'Enforce SSL connection' is set to 'ENABLED' for MySQL Database Server."
              },
              "name": "MySQLServerSSLEnforcementEnabled",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure 'Enforce SSL connection' is set to 'ENABLED' for MySQL Database Server."
              },
              "helpUri": "https://slscan.io?q=CKV_AZURE_28",
              "shortDescription": {
                "text": "Ensure 'Enforce SSL connection' is set to 'ENABLED' for MySQL Database Server."
              }
            },
            {
              "id": "CKV_AZURE_29",
              "help": {
                "text": "Ensure 'Enforce SSL connection' is set to 'ENABLED' for PostgreSQL Database Server.",
                "markdown": "Ensure 'Enforce SSL connection' is set to 'ENABLED' for PostgreSQL Database Server."
              },
              "name": "PostgreSQLServerSSLEnforcementEnabled",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure 'Enforce SSL connection' is set to 'ENABLED' for PostgreSQL Database Server."
              },
              "helpUri": "https://slscan.io?q=CKV_AZURE_29",
              "shortDescription": {
                "text": "Ensure 'Enforce SSL connection' is set to 'ENABLED' for PostgreSQL Database Server."
              }
            },
            {
              "id": "CKV_AZURE_32",
              "help": {
                "text": "Ensure server parameter 'connection_throttling' is set to 'ON' for PostgreSQL Database Server.",
                "markdown": "Ensure server parameter 'connection_throttling' is set to 'ON' for PostgreSQL Database Server."
              },
              "name": "PostgreSQLServerConnectionThrottlingEnabled",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure server parameter 'connection_throttling' is set to 'ON' for PostgreSQL Database Server."
              },
              "helpUri": "https://slscan.io?q=CKV_AZURE_32",
              "shortDescription": {
                "text": "Ensure server parameter 'connection_throttling' is set to 'ON' for PostgreSQL Database Server."
              }
            },
            {
              "id": "CKV_AZURE_30",
              "help": {
                "text": "Ensure server parameter 'log_checkpoints' is set to 'ON' for PostgreSQL Database Server.",
                "markdown": "Ensure server parameter 'log_checkpoints' is set to 'ON' for PostgreSQL Database Server."
              },
              "name": "PostgreSQLServerLogCheckpointsEnabled",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure server parameter 'log_checkpoints' is set to 'ON' for PostgreSQL Database Server."
              },
              "helpUri": "https://slscan.io?q=CKV_AZURE_30",
              "shortDescription": {
                "text": "Ensure server parameter 'log_checkpoints' is set to 'ON' for PostgreSQL Database Server."
              }
            },
            {
              "id": "CKV_AZURE_2",
              "help": {
                "text": "Ensure Azure managed disk have encryption enabled.",
                "markdown": "Ensure Azure managed disk have encryption enabled."
              },
              "name": "AzureManagedDiscEncryption",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure Azure managed disk have encryption enabled."
              },
              "helpUri": "https://slscan.io?q=CKV_AZURE_2",
              "shortDescription": {
                "text": "Ensure Azure managed disk have encryption enabled."
              }
            },
            {
              "id": "CKV_AZURE_35",
              "help": {
                "text": "Ensure default network access rule for Storage Accounts is set to deny.",
                "markdown": "Ensure default network access rule for Storage Accounts is set to deny."
              },
              "name": "StorageAccountDefaultNetworkAccessDeny",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure default network access rule for Storage Accounts is set to deny."
              },
              "helpUri": "https://slscan.io?q=CKV_AZURE_35",
              "shortDescription": {
                "text": "Ensure default network access rule for Storage Accounts is set to deny."
              }
            },
            {
              "id": "CKV_AZURE_33",
              "help": {
                "text": "Ensure Storage logging is enabled for Queue service for read, write and delete requests.",
                "markdown": "Ensure Storage logging is enabled for Queue service for read, write and delete requests."
              },
              "name": "StorageAccountLoggingQueueServiceEnabled",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure Storage logging is enabled for Queue service for read, write and delete requests."
              },
              "helpUri": "https://slscan.io?q=CKV_AZURE_33",
              "shortDescription": {
                "text": "Ensure Storage logging is enabled for Queue service for read, write and delete requests."
              }
            },
            {
              "id": "CKV_AZURE_44",
              "help": {
                "text": "Ensure Storage Account is using the latest version of TLS encryption.",
                "markdown": "Ensure Storage Account is using the latest version of TLS encryption."
              },
              "name": "StorageAccountMinimumTlsVersion",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure Storage Account is using the latest version of TLS encryption."
              },
              "helpUri": "https://slscan.io?q=CKV_AZURE_44",
              "shortDescription": {
                "text": "Ensure Storage Account is using the latest version of TLS encryption."
              }
            },
            {
              "id": "CKV_AZURE_3",
              "help": {
                "text": "Ensure that 'Secure transfer required' is set to 'Enabled'.",
                "markdown": "Ensure that 'Secure transfer required' is set to 'Enabled'."
              },
              "name": "StorageAccountsTransportEncryption",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure that 'Secure transfer required' is set to 'Enabled'."
              },
              "helpUri": "https://slscan.io?q=CKV_AZURE_3",
              "shortDescription": {
                "text": "Ensure that 'Secure transfer required' is set to 'Enabled'."
              }
            },
            {
              "id": "CKV_AZURE_36",
              "help": {
                "text": "Ensure 'Trusted Microsoft Services' is enabled for Storage Account access.",
                "markdown": "Ensure 'Trusted Microsoft Services' is enabled for Storage Account access."
              },
              "name": "StorageAccountAzureServicesAccessEnabled",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure 'Trusted Microsoft Services' is enabled for Storage Account access."
              },
              "helpUri": "https://slscan.io?q=CKV_AZURE_36",
              "shortDescription": {
                "text": "Ensure 'Trusted Microsoft Services' is enabled for Storage Account access."
              }
            },
            {
              "id": "CKV_GCP_14",
              "help": {
                "text": "Ensure all Cloud SQL database instance have backup configuration enabled.",
                "markdown": "Ensure all Cloud SQL database instance have backup configuration enabled."
              },
              "name": "GoogleCloudSqlBackupConfiguration",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure all Cloud SQL database instance have backup configuration enabled."
              },
              "helpUri": "https://slscan.io?q=CKV_GCP_14",
              "shortDescription": {
                "text": "Ensure all Cloud SQL database instance have backup configuration enabled."
              }
            },
            {
              "id": "CKV_GCP_11",
              "help": {
                "text": "Ensure that Cloud SQL database Instances are not open to the world.",
                "markdown": "Ensure that Cloud SQL database Instances are not open to the world."
              },
              "name": "GoogleCloudSqlDatabasePublicallyAccessible",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure that Cloud SQL database Instances are not open to the world."
              },
              "helpUri": "https://slscan.io?q=CKV_GCP_11",
              "shortDescription": {
                "text": "Ensure that Cloud SQL database Instances are not open to the world."
              }
            },
            {
              "id": "CKV_GCP_6",
              "help": {
                "text": "Ensure all Cloud SQL database instance requires all incoming connections to use SSL.",
                "markdown": "Ensure all Cloud SQL database instance requires all incoming connections to use SSL."
              },
              "name": "GoogleCloudSqlDatabaseRequireSsl",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure all Cloud SQL database instance requires all incoming connections to use SSL."
              },
              "helpUri": "https://slscan.io?q=CKV_GCP_6",
              "shortDescription": {
                "text": "Ensure all Cloud SQL database instance requires all incoming connections to use SSL."
              }
            },
            {
              "id": "CKV_GCP_15",
              "help": {
                "text": "Ensure that BigQuery datasets are not anonymously or publicly accessible.",
                "markdown": "Ensure that BigQuery datasets are not anonymously or publicly accessible."
              },
              "name": "GoogleBigQueryDatasetPublicACL",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure that BigQuery datasets are not anonymously or publicly accessible."
              },
              "helpUri": "https://slscan.io?q=CKV_GCP_15",
              "shortDescription": {
                "text": "Ensure that BigQuery datasets are not anonymously or publicly accessible."
              }
            },
            {
              "id": "CKV_GCP_5",
              "help": {
                "text": "Ensure Google storage bucket have encryption enabled.",
                "markdown": "Ensure Google storage bucket have encryption enabled."
              },
              "name": "GoogleStorageBucketEncryption",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure Google storage bucket have encryption enabled."
              },
              "helpUri": "https://slscan.io?q=CKV_GCP_5",
              "shortDescription": {
                "text": "Ensure Google storage bucket have encryption enabled."
              }
            },
            {
              "id": "CKV_GCP_29",
              "help": {
                "text": "Ensure that Cloud Storage buckets have uniform bucket-level access enabled.",
                "markdown": "Ensure that Cloud Storage buckets have uniform bucket-level access enabled."
              },
              "name": "GoogleStorageBucketUniformAccess",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure that Cloud Storage buckets have uniform bucket-level access enabled."
              },
              "helpUri": "https://slscan.io?q=CKV_GCP_29",
              "shortDescription": {
                "text": "Ensure that Cloud Storage buckets have uniform bucket-level access enabled."
              }
            },
            {
              "id": "CKV_GCP_28",
              "help": {
                "text": "Ensure that Cloud Storage bucket is not anonymously or publicly accessible.",
                "markdown": "Ensure that Cloud Storage bucket is not anonymously or publicly accessible."
              },
              "name": "GoogleStorageBucketNotPublic",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure that Cloud Storage bucket is not anonymously or publicly accessible."
              },
              "helpUri": "https://slscan.io?q=CKV_GCP_28",
              "shortDescription": {
                "text": "Ensure that Cloud Storage bucket is not anonymously or publicly accessible."
              }
            },
            {
              "id": "CKV_GCP_23",
              "help": {
                "text": "Ensure Kubernetes Cluster is created with Alias IP ranges enabled.",
                "markdown": "Ensure Kubernetes Cluster is created with Alias IP ranges enabled."
              },
              "name": "GKEAliasIpEnabled",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure Kubernetes Cluster is created with Alias IP ranges enabled."
              },
              "helpUri": "https://slscan.io?q=CKV_GCP_23",
              "shortDescription": {
                "text": "Ensure Kubernetes Cluster is created with Alias IP ranges enabled."
              }
            },
            {
              "id": "CKV_GCP_19",
              "help": {
                "text": "Ensure GKE basic auth is disabled.",
                "markdown": "Ensure GKE basic auth is disabled."
              },
              "name": "GKEBasicAuth",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure GKE basic auth is disabled."
              },
              "helpUri": "https://slscan.io?q=CKV_GCP_19",
              "shortDescription": {
                "text": "Ensure GKE basic auth is disabled."
              }
            },
            {
              "id": "CKV_GCP_13",
              "help": {
                "text": "Ensure a client certificate is used by clients to authenticate to Kubernetes Engine Clusters.",
                "markdown": "Ensure a client certificate is used by clients to authenticate to Kubernetes Engine Clusters."
              },
              "name": "GKEClientCertificateEnabled",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure a client certificate is used by clients to authenticate to Kubernetes Engine Clusters."
              },
              "helpUri": "https://slscan.io?q=CKV_GCP_13",
              "shortDescription": {
                "text": "Ensure a client certificate is used by clients to authenticate to Kubernetes Engine Clusters."
              }
            },
            {
              "id": "CKV_GCP_1",
              "help": {
                "text": "Ensure Stackdriver Logging is set to Enabled on Kubernetes Engine Clusters.",
                "markdown": "Ensure Stackdriver Logging is set to Enabled on Kubernetes Engine Clusters."
              },
              "name": "GKEClusterLogging",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure Stackdriver Logging is set to Enabled on Kubernetes Engine Clusters."
              },
              "helpUri": "https://slscan.io?q=CKV_GCP_1",
              "shortDescription": {
                "text": "Ensure Stackdriver Logging is set to Enabled on Kubernetes Engine Clusters."
              }
            },
            {
              "id": "CKV_GCP_7",
              "help": {
                "text": "Ensure Legacy Authorization is set to Disabled on Kubernetes Engine Clusters.",
                "markdown": "Ensure Legacy Authorization is set to Disabled on Kubernetes Engine Clusters."
              },
              "name": "GKEDisableLegacyAuth",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure Legacy Authorization is set to Disabled on Kubernetes Engine Clusters."
              },
              "helpUri": "https://slscan.io?q=CKV_GCP_7",
              "shortDescription": {
                "text": "Ensure Legacy Authorization is set to Disabled on Kubernetes Engine Clusters."
              }
            },
            {
              "id": "CKV_GCP_21",
              "help": {
                "text": "Ensure Kubernetes Clusters are configured with Labels.",
                "markdown": "Ensure Kubernetes Clusters are configured with Labels."
              },
              "name": "GKEHasLabels",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure Kubernetes Clusters are configured with Labels."
              },
              "helpUri": "https://slscan.io?q=CKV_GCP_21",
              "shortDescription": {
                "text": "Ensure Kubernetes Clusters are configured with Labels."
              }
            },
            {
              "id": "CKV_GCP_8",
              "help": {
                "text": "Ensure Stackdriver Monitoring is set to Enabled on Kubernetes Engine Clusters.",
                "markdown": "Ensure Stackdriver Monitoring is set to Enabled on Kubernetes Engine Clusters."
              },
              "name": "GKEMonitoringEnabled",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure Stackdriver Monitoring is set to Enabled on Kubernetes Engine Clusters."
              },
              "helpUri": "https://slscan.io?q=CKV_GCP_8",
              "shortDescription": {
                "text": "Ensure Stackdriver Monitoring is set to Enabled on Kubernetes Engine Clusters."
              }
            },
            {
              "id": "CKV_GCP_12",
              "help": {
                "text": "Ensure Network Policy is enabled on Kubernetes Engine Clusters.",
                "markdown": "Ensure Network Policy is enabled on Kubernetes Engine Clusters."
              },
              "name": "GKENetworkPolicyEnabled",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure Network Policy is enabled on Kubernetes Engine Clusters."
              },
              "helpUri": "https://slscan.io?q=CKV_GCP_12",
              "shortDescription": {
                "text": "Ensure Network Policy is enabled on Kubernetes Engine Clusters."
              }
            },
            {
              "id": "CKV_GCP_24",
              "help": {
                "text": "Ensure PodSecurityPolicy controller is enabled on the Kubernetes Engine Clusters.",
                "markdown": "Ensure PodSecurityPolicy controller is enabled on the Kubernetes Engine Clusters."
              },
              "name": "GKEPodSecurityPolicyEnabled",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure PodSecurityPolicy controller is enabled on the Kubernetes Engine Clusters."
              },
              "helpUri": "https://slscan.io?q=CKV_GCP_24",
              "shortDescription": {
                "text": "Ensure PodSecurityPolicy controller is enabled on the Kubernetes Engine Clusters."
              }
            },
            {
              "id": "CKV_GCP_25",
              "help": {
                "text": "Ensure Kubernetes Cluster is created with Private cluster enabled.",
                "markdown": "Ensure Kubernetes Cluster is created with Private cluster enabled."
              },
              "name": "GKEPrivateClusterConfig",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure Kubernetes Cluster is created with Private cluster enabled."
              },
              "helpUri": "https://slscan.io?q=CKV_GCP_25",
              "shortDescription": {
                "text": "Ensure Kubernetes Cluster is created with Private cluster enabled."
              }
            },
            {
              "id": "CKV_GCP_18",
              "help": {
                "text": "Ensure GKE Control Plane is not public.",
                "markdown": "Ensure GKE Control Plane is not public."
              },
              "name": "GKEPublicControlPlane",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure GKE Control Plane is not public."
              },
              "helpUri": "https://slscan.io?q=CKV_GCP_18",
              "shortDescription": {
                "text": "Ensure GKE Control Plane is not public."
              }
            },
            {
              "id": "CKV_GCP_9",
              "help": {
                "text": "Ensure 'Automatic node repair' is enabled for Kubernetes Clusters.",
                "markdown": "Ensure 'Automatic node repair' is enabled for Kubernetes Clusters."
              },
              "name": "GKENodePoolAutoRepairEnabled",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure 'Automatic node repair' is enabled for Kubernetes Clusters."
              },
              "helpUri": "https://slscan.io?q=CKV_GCP_9",
              "shortDescription": {
                "text": "Ensure 'Automatic node repair' is enabled for Kubernetes Clusters."
              }
            },
            {
              "id": "CKV_GCP_10",
              "help": {
                "text": "Ensure 'Automatic node upgrade' is enabled for Kubernetes Clusters.",
                "markdown": "Ensure 'Automatic node upgrade' is enabled for Kubernetes Clusters."
              },
              "name": "GKENodePoolAutoUpgradeEnabled",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure 'Automatic node upgrade' is enabled for Kubernetes Clusters."
              },
              "helpUri": "https://slscan.io?q=CKV_GCP_10",
              "shortDescription": {
                "text": "Ensure 'Automatic node upgrade' is enabled for Kubernetes Clusters."
              }
            },
            {
              "id": "CKV_GCP_22",
              "help": {
                "text": "Ensure Container-Optimized OS (cos) is used for Kubernetes Engine Clusters Node image.",
                "markdown": "Ensure Container-Optimized OS (cos) is used for Kubernetes Engine Clusters Node image."
              },
              "name": "GKEUseCosImage",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure Container-Optimized OS (cos) is used for Kubernetes Engine Clusters Node image."
              },
              "helpUri": "https://slscan.io?q=CKV_GCP_22",
              "shortDescription": {
                "text": "Ensure Container-Optimized OS (cos) is used for Kubernetes Engine Clusters Node image."
              }
            },
            {
              "id": "CKV_GCP_38",
              "help": {
                "text": "Ensure VM disks for critical VMs are encrypted with Customer Supplied Encryption Keys (CSEK).",
                "markdown": "Ensure VM disks for critical VMs are encrypted with Customer Supplied Encryption Keys (CSEK)."
              },
              "name": "GoogleComputeBootDiskEncryption",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure VM disks for critical VMs are encrypted with Customer Supplied Encryption Keys (CSEK)."
              },
              "helpUri": "https://slscan.io?q=CKV_GCP_38",
              "shortDescription": {
                "text": "Ensure VM disks for critical VMs are encrypted with Customer Supplied Encryption Keys (CSEK)."
              }
            },
            {
              "id": "CKV_GCP_30",
              "help": {
                "text": "Ensure that instances are not configured to use the default service account.",
                "markdown": "Ensure that instances are not configured to use the default service account."
              },
              "name": "GoogleComputeDefaultServiceAccount",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure that instances are not configured to use the default service account."
              },
              "helpUri": "https://slscan.io?q=CKV_GCP_30",
              "shortDescription": {
                "text": "Ensure that instances are not configured to use the default service account."
              }
            },
            {
              "id": "CKV_GCP_36",
              "help": {
                "text": "Ensure that IP forwarding is not enabled on Instances.",
                "markdown": "Ensure that IP forwarding is not enabled on Instances."
              },
              "name": "GoogleComputeIPForward",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure that IP forwarding is not enabled on Instances."
              },
              "helpUri": "https://slscan.io?q=CKV_GCP_36",
              "shortDescription": {
                "text": "Ensure that IP forwarding is not enabled on Instances."
              }
            },
            {
              "id": "CKV_GCP_34",
              "help": {
                "text": "Ensure that no instance in the project overrides the project setting for enabling OSLogin(OSLogin needs to be enabled in prject metadata for all instances).",
                "markdown": "Ensure that no instance in the project overrides the project setting for enabling OSLogin(OSLogin needs to be enabled in prject metadata for all instances)."
              },
              "name": "GoogleComputeInstanceOSLogin",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure that no instance in the project overrides the project setting for enabling OSLogin(OSLogin needs to be enabled in prject metadata for all instances)."
              },
              "helpUri": "https://slscan.io?q=CKV_GCP_34",
              "shortDescription": {
                "text": "Ensure that no instance in the project overrides the project setting for enabling OSLogin(OSLogin needs to be enabled in prject metadata for all instances)."
              }
            },
            {
              "id": "CKV_GCP_35",
              "help": {
                "text": "Ensure 'Enable connecting to serial ports' is not enabled for VM Instance.",
                "markdown": "Ensure 'Enable connecting to serial ports' is not enabled for VM Instance."
              },
              "name": "GoogleComputeSerialPorts",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure 'Enable connecting to serial ports' is not enabled for VM Instance."
              },
              "helpUri": "https://slscan.io?q=CKV_GCP_35",
              "shortDescription": {
                "text": "Ensure 'Enable connecting to serial ports' is not enabled for VM Instance."
              }
            },
            {
              "id": "CKV_GCP_39",
              "help": {
                "text": "Ensure Compute instances are launched with Shielded VM enabled.",
                "markdown": "Ensure Compute instances are launched with Shielded VM enabled."
              },
              "name": "GoogleComputeShieldedVM",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure Compute instances are launched with Shielded VM enabled."
              },
              "helpUri": "https://slscan.io?q=CKV_GCP_39",
              "shortDescription": {
                "text": "Ensure Compute instances are launched with Shielded VM enabled."
              }
            },
            {
              "id": "CKV_GCP_32",
              "help": {
                "text": "Ensure 'Block Project-wide SSH keys' is enabled for VM instances.",
                "markdown": "Ensure 'Block Project-wide SSH keys' is enabled for VM instances."
              },
              "name": "GoogleComupteBlockProjectSSH",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure 'Block Project-wide SSH keys' is enabled for VM instances."
              },
              "helpUri": "https://slscan.io?q=CKV_GCP_32",
              "shortDescription": {
                "text": "Ensure 'Block Project-wide SSH keys' is enabled for VM instances."
              }
            },
            {
              "id": "CKV_GCP_37",
              "help": {
                "text": "Ensure VM disks for critical VMs are encrypted with Customer Supplied Encryption Keys (CSEK).",
                "markdown": "Ensure VM disks for critical VMs are encrypted with Customer Supplied Encryption Keys (CSEK)."
              },
              "name": "GoogleComputeDiskEncryption",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure VM disks for critical VMs are encrypted with Customer Supplied Encryption Keys (CSEK)."
              },
              "helpUri": "https://slscan.io?q=CKV_GCP_37",
              "shortDescription": {
                "text": "Ensure VM disks for critical VMs are encrypted with Customer Supplied Encryption Keys (CSEK)."
              }
            },
            {
              "id": "CKV_GCP_26",
              "help": {
                "text": "Ensure that VPC Flow Logs is enabled for every subnet in a VPC Network.",
                "markdown": "Ensure that VPC Flow Logs is enabled for every subnet in a VPC Network."
              },
              "name": "GoogleSubnetworkLoggingEnabled",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure that VPC Flow Logs is enabled for every subnet in a VPC Network."
              },
              "helpUri": "https://slscan.io?q=CKV_GCP_26",
              "shortDescription": {
                "text": "Ensure that VPC Flow Logs is enabled for every subnet in a VPC Network."
              }
            },
            {
              "id": "CKV_GCP_2",
              "help": {
                "text": "Ensure Google compute firewall ingress does not allow unrestricted ssh access.",
                "markdown": "Ensure Google compute firewall ingress does not allow unrestricted ssh access."
              },
              "name": "GoogleComputeFirewallUnrestrictedIngress22",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure Google compute firewall ingress does not allow unrestricted ssh access."
              },
              "helpUri": "https://slscan.io?q=CKV_GCP_2",
              "shortDescription": {
                "text": "Ensure Google compute firewall ingress does not allow unrestricted ssh access."
              }
            },
            {
              "id": "CKV_GCP_3",
              "help": {
                "text": "Ensure Google compute firewall ingress does not allow unrestricted rdp access.",
                "markdown": "Ensure Google compute firewall ingress does not allow unrestricted rdp access."
              },
              "name": "GoogleComputeFirewallUnrestrictedIngress3389",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure Google compute firewall ingress does not allow unrestricted rdp access."
              },
              "helpUri": "https://slscan.io?q=CKV_GCP_3",
              "shortDescription": {
                "text": "Ensure Google compute firewall ingress does not allow unrestricted rdp access."
              }
            }
          ],
          "version": "1.0.0-scan",
          "fullName": "Security Audit for Infrastructure"
        }
      },
      "conversion": {
        "tool": {
          "driver": {
            "name": "@ShiftLeft/sast-scan"
          }
        },
        "invocation": {
          "arguments": [
            "-s",
            "--quiet",
            "--no-guide",
            "-o",
            "json",
            "-d",
            "/app"
          ],
          "executionSuccessful": true,
          "commandLine": "-s --quiet --no-guide -o json -d /app",
          "endTimeUtc": "2020-10-19T06:30:51Z",
          "workingDirectory": {
            "uri": "file:///home/ec2-user/vulnerableapps/terragoat"
          }
        }
      },
      "invocations": [
        {
          "executionSuccessful": true,
          "endTimeUtc": "2020-10-19T06:30:51Z",
          "workingDirectory": {
            "uri": "file:///home/ec2-user/vulnerableapps/terragoat"
          }
        }
      ],
      "properties": {
        "metrics": {
          "total": 118,
          "critical": 27,
          "high": 80,
          "medium": 4,
          "low": 7
        }
      },
      "results": [
        {
          "message": {
            "markdown": "",
            "text": "Ensure all data stored in the RDS is securely encrypted at rest."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "1 resource \"aws_db_instance\" \"default\" {\n"
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/aws/db-app.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "1 resource \"aws_db_instance\" \"default\" {\n  name                   = var.dbname\n  engine                 = \"mysql\"\n"
                  },
                  "endLine": 3,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AWS_16",
          "ruleIndex": 0
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure all data stored in the RDS bucket is not public accessible."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "1 resource \"aws_db_instance\" \"default\" {\n"
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/aws/db-app.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "1 resource \"aws_db_instance\" \"default\" {\n  name                   = var.dbname\n  engine                 = \"mysql\"\n"
                  },
                  "endLine": 3,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AWS_17",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure Instance Metadata Service Version 1 is not enabled."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "178 resource \"aws_instance\" \"db_app\" {\n"
                  },
                  "startLine": 178
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/aws/db-app.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "178 resource \"aws_instance\" \"db_app\" {\n  # ec2 have plain text secrets in user data\n  ami                  = data.aws_ami.amazon-linux-2.id\n"
                  },
                  "endLine": 180,
                  "startLine": 178
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AWS_79",
          "ruleIndex": 2
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure all data stored in the Launch configuration EBS is securely encrypted."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "178 resource \"aws_instance\" \"db_app\" {\n"
                  },
                  "startLine": 178
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/aws/db-app.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "178 resource \"aws_instance\" \"db_app\" {\n  # ec2 have plain text secrets in user data\n  ami                  = data.aws_ami.amazon-linux-2.id\n"
                  },
                  "endLine": 180,
                  "startLine": 178
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AWS_8",
          "ruleIndex": 3
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure no hard coded AWS access key and secret key exists in EC2 user data."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "1 resource \"aws_instance\" \"web_host\" {\n"
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/aws/ec2.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "1 resource \"aws_instance\" \"web_host\" {\n  # ec2 have plain text secrets in user data\n  ami           = \"${var.ami}\"\n"
                  },
                  "endLine": 3,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AWS_46",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure Instance Metadata Service Version 1 is not enabled."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "1 resource \"aws_instance\" \"web_host\" {\n"
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/aws/ec2.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "1 resource \"aws_instance\" \"web_host\" {\n  # ec2 have plain text secrets in user data\n  ami           = \"${var.ami}\"\n"
                  },
                  "endLine": 3,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AWS_79",
          "ruleIndex": 2
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure all data stored in the Launch configuration EBS is securely encrypted."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "1 resource \"aws_instance\" \"web_host\" {\n"
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/aws/ec2.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "1 resource \"aws_instance\" \"web_host\" {\n  # ec2 have plain text secrets in user data\n  ami           = \"${var.ami}\"\n"
                  },
                  "endLine": 3,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AWS_8",
          "ruleIndex": 3
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure all data stored in the EBS is securely encrypted."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "25 resource \"aws_ebs_volume\" \"web_host_storage\" {\n"
                  },
                  "startLine": 25
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/aws/ec2.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "25 resource \"aws_ebs_volume\" \"web_host_storage\" {\n  # unencrypted volume\n  availability_zone = \"${var.availability_zone}\"\n"
                  },
                  "endLine": 27,
                  "startLine": 25
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AWS_3",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "50 resource \"aws_security_group\" \"web-node\" {\n"
                  },
                  "startLine": 50
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/aws/ec2.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "50 resource \"aws_security_group\" \"web-node\" {\n  # security group is open to the world in SSH port\n  name        = \"${local.resource_prefix.value}-sg\"\n"
                  },
                  "endLine": 52,
                  "startLine": 50
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AWS_24",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure the S3 bucket has access logging enabled."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "171 resource \"aws_s3_bucket\" \"flowbucket\" {\n"
                  },
                  "startLine": 171
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/aws/ec2.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "171 resource \"aws_s3_bucket\" \"flowbucket\" {\n  bucket        = \"${local.resource_prefix.value}-flowlogs\"\n  force_destroy = true\n"
                  },
                  "endLine": 173,
                  "startLine": 171
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AWS_18",
          "ruleIndex": 7
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure all data stored in the S3 bucket is securely encrypted at rest."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "171 resource \"aws_s3_bucket\" \"flowbucket\" {\n"
                  },
                  "startLine": 171
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/aws/ec2.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "171 resource \"aws_s3_bucket\" \"flowbucket\" {\n  bucket        = \"${local.resource_prefix.value}-flowlogs\"\n  force_destroy = true\n"
                  },
                  "endLine": 173,
                  "startLine": 171
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AWS_19",
          "ruleIndex": 8
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure S3 bucket has MFA delete enabled."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "171 resource \"aws_s3_bucket\" \"flowbucket\" {\n"
                  },
                  "startLine": 171
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/aws/ec2.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "171 resource \"aws_s3_bucket\" \"flowbucket\" {\n  bucket        = \"${local.resource_prefix.value}-flowlogs\"\n  force_destroy = true\n"
                  },
                  "endLine": 173,
                  "startLine": 171
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AWS_52",
          "ruleIndex": 9
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure all data stored in the S3 bucket have versioning enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "171 resource \"aws_s3_bucket\" \"flowbucket\" {\n"
                  },
                  "startLine": 171
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/aws/ec2.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "171 resource \"aws_s3_bucket\" \"flowbucket\" {\n  bucket        = \"${local.resource_prefix.value}-flowlogs\"\n  force_destroy = true\n"
                  },
                  "endLine": 173,
                  "startLine": 171
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AWS_21",
          "ruleIndex": 10
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure ECR image scanning on push is enabled."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "1 resource aws_ecr_repository \"repository\" {\n"
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/aws/ecr.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "1 resource aws_ecr_repository \"repository\" {\n  name                 = \"${local.resource_prefix.value}-repository\"\n  image_tag_mutability = \"MUTABLE\"\n"
                  },
                  "endLine": 3,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AWS_33",
          "ruleIndex": 11
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure ECR Image Tags are immutable."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "1 resource aws_ecr_repository \"repository\" {\n"
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/aws/ecr.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "1 resource aws_ecr_repository \"repository\" {\n  name                 = \"${local.resource_prefix.value}-repository\"\n  image_tag_mutability = \"MUTABLE\"\n"
                  },
                  "endLine": 3,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AWS_51",
          "ruleIndex": 12
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure Amazon EKS control plane logging enabled for all log types."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "64 resource aws_eks_cluster \"eks_cluster\" {\n"
                  },
                  "startLine": 64
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/aws/eks.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "64 resource aws_eks_cluster \"eks_cluster\" {\n  name     = local.eks_name.value\n  role_arn = \"${aws_iam_role.iam_for_eks.arn}\"\n"
                  },
                  "endLine": 66,
                  "startLine": 64
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AWS_37",
          "ruleIndex": 13
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure Amazon EKS public endpoint disabled."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "64 resource aws_eks_cluster \"eks_cluster\" {\n"
                  },
                  "startLine": 64
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/aws/eks.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "64 resource aws_eks_cluster \"eks_cluster\" {\n  name     = local.eks_name.value\n  role_arn = \"${aws_iam_role.iam_for_eks.arn}\"\n"
                  },
                  "endLine": 66,
                  "startLine": 64
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AWS_39",
          "ruleIndex": 14
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure Amazon EKS public endpoint not accessible to 0.0.0.0/0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "64 resource aws_eks_cluster \"eks_cluster\" {\n"
                  },
                  "startLine": 64
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/aws/eks.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "64 resource aws_eks_cluster \"eks_cluster\" {\n  name     = local.eks_name.value\n  role_arn = \"${aws_iam_role.iam_for_eks.arn}\"\n"
                  },
                  "endLine": 66,
                  "startLine": 64
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AWS_38",
          "ruleIndex": 15
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure EKS Cluster has Secrets Encryption Enabled."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "64 resource aws_eks_cluster \"eks_cluster\" {\n"
                  },
                  "startLine": 64
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/aws/eks.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "64 resource aws_eks_cluster \"eks_cluster\" {\n  name     = local.eks_name.value\n  role_arn = \"${aws_iam_role.iam_for_eks.arn}\"\n"
                  },
                  "endLine": 66,
                  "startLine": 64
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AWS_58",
          "ruleIndex": 16
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure all data stored in the Elasticsearch is securely encrypted at rest."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "1 resource \"aws_elasticsearch_domain\" \"monitoring-framework\" {\n"
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/aws/es.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "1 resource \"aws_elasticsearch_domain\" \"monitoring-framework\" {\n  domain_name           = \"tg-${var.environment}-es\"\n  elasticsearch_version = \"2.3\"\n"
                  },
                  "endLine": 3,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AWS_5",
          "ruleIndex": 17
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure IAM policies are attached only to groups or roles (Reducing access management complexity may in-turn reduce opportunity for a principal to inadvertently receive or retain excessive privileges.)."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "16 resource \"aws_iam_user_policy\" \"userpolicy\" {\n"
                  },
                  "startLine": 16
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/aws/iam.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "16 resource \"aws_iam_user_policy\" \"userpolicy\" {\n  name = \"excess_policy\"\n  user = \"${aws_iam_user.user.name}\"\n"
                  },
                  "endLine": 18,
                  "startLine": 16
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AWS_40",
          "ruleIndex": 18
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure rotation for customer created CMKs is enabled."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "1 resource \"aws_kms_key\" \"logs_key\" {\n"
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/aws/kms.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "1 resource \"aws_kms_key\" \"logs_key\" {\n  # key does not have rotation enabled\n  description = \"${local.resource_prefix.value}-logs bucket key\"\n"
                  },
                  "endLine": 3,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AWS_7",
          "ruleIndex": 19
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure no hard coded AWS access key and secret key exists in lambda environment."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "21 resource \"aws_lambda_function\" \"analysis_lambda\" {\n"
                  },
                  "startLine": 21
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/aws/lambda.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "21 resource \"aws_lambda_function\" \"analysis_lambda\" {\n  # lambda have plain text secrets in environment variables\n  filename      = \"resources/lambda_function_payload.zip\"\n"
                  },
                  "endLine": 23,
                  "startLine": 21
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AWS_45",
          "ruleIndex": 20
        },
        {
          "message": {
            "markdown": "",
            "text": "X-ray tracing is enabled for Lambda."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "21 resource \"aws_lambda_function\" \"analysis_lambda\" {\n"
                  },
                  "startLine": 21
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/aws/lambda.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "21 resource \"aws_lambda_function\" \"analysis_lambda\" {\n  # lambda have plain text secrets in environment variables\n  filename      = \"resources/lambda_function_payload.zip\"\n"
                  },
                  "endLine": 23,
                  "startLine": 21
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AWS_50",
          "ruleIndex": 21
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure Neptune storage is securely encrypted."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "1 resource \"aws_neptune_cluster\" \"default\" {\n"
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/aws/neptune.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "1 resource \"aws_neptune_cluster\" \"default\" {\n  cluster_identifier                  = var.neptune-dbname\n  engine                              = \"neptune\"\n"
                  },
                  "endLine": 3,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AWS_44",
          "ruleIndex": 22
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure no hard coded AWS access key and and secret key exists in provider."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "7 provider \"aws\" {\n"
                  },
                  "startLine": 7
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/aws/providers.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "7 provider \"aws\" {\n  alias      = \"plain_text_access_keys_provider\"\n  region     = \"us-west-1\"\n"
                  },
                  "endLine": 9,
                  "startLine": 7
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AWS_41",
          "ruleIndex": 23
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure the S3 bucket has access logging enabled."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "1 resource \"aws_s3_bucket\" \"data\" {\n"
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/aws/s3.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "1 resource \"aws_s3_bucket\" \"data\" {\n  # bucket is public\n  # bucket is not encrypted\n"
                  },
                  "endLine": 3,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AWS_18",
          "ruleIndex": 7
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure all data stored in the S3 bucket is securely encrypted at rest."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "1 resource \"aws_s3_bucket\" \"data\" {\n"
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/aws/s3.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "1 resource \"aws_s3_bucket\" \"data\" {\n  # bucket is public\n  # bucket is not encrypted\n"
                  },
                  "endLine": 3,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AWS_19",
          "ruleIndex": 8
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure S3 bucket has MFA delete enabled."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "1 resource \"aws_s3_bucket\" \"data\" {\n"
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/aws/s3.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "1 resource \"aws_s3_bucket\" \"data\" {\n  # bucket is public\n  # bucket is not encrypted\n"
                  },
                  "endLine": 3,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AWS_52",
          "ruleIndex": 9
        },
        {
          "message": {
            "markdown": "",
            "text": "S3 Bucket has an ACL defined which allows public READ access."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "1 resource \"aws_s3_bucket\" \"data\" {\n"
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/aws/s3.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "1 resource \"aws_s3_bucket\" \"data\" {\n  # bucket is public\n  # bucket is not encrypted\n"
                  },
                  "endLine": 3,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AWS_20",
          "ruleIndex": 24
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure all data stored in the S3 bucket have versioning enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "1 resource \"aws_s3_bucket\" \"data\" {\n"
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/aws/s3.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "1 resource \"aws_s3_bucket\" \"data\" {\n  # bucket is public\n  # bucket is not encrypted\n"
                  },
                  "endLine": 3,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AWS_21",
          "ruleIndex": 10
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure the S3 bucket has access logging enabled."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "25 resource \"aws_s3_bucket\" \"financials\" {\n"
                  },
                  "startLine": 25
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/aws/s3.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "25 resource \"aws_s3_bucket\" \"financials\" {\n  # bucket is not encrypted\n  # bucket does not have access logs\n"
                  },
                  "endLine": 27,
                  "startLine": 25
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AWS_18",
          "ruleIndex": 7
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure all data stored in the S3 bucket is securely encrypted at rest."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "25 resource \"aws_s3_bucket\" \"financials\" {\n"
                  },
                  "startLine": 25
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/aws/s3.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "25 resource \"aws_s3_bucket\" \"financials\" {\n  # bucket is not encrypted\n  # bucket does not have access logs\n"
                  },
                  "endLine": 27,
                  "startLine": 25
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AWS_19",
          "ruleIndex": 8
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure S3 bucket has MFA delete enabled."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "25 resource \"aws_s3_bucket\" \"financials\" {\n"
                  },
                  "startLine": 25
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/aws/s3.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "25 resource \"aws_s3_bucket\" \"financials\" {\n  # bucket is not encrypted\n  # bucket does not have access logs\n"
                  },
                  "endLine": 27,
                  "startLine": 25
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AWS_52",
          "ruleIndex": 9
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure all data stored in the S3 bucket have versioning enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "25 resource \"aws_s3_bucket\" \"financials\" {\n"
                  },
                  "startLine": 25
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/aws/s3.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "25 resource \"aws_s3_bucket\" \"financials\" {\n  # bucket is not encrypted\n  # bucket does not have access logs\n"
                  },
                  "endLine": 27,
                  "startLine": 25
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AWS_21",
          "ruleIndex": 10
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure the S3 bucket has access logging enabled."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "39 resource \"aws_s3_bucket\" \"operations\" {\n"
                  },
                  "startLine": 39
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/aws/s3.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "39 resource \"aws_s3_bucket\" \"operations\" {\n  # bucket is not encrypted\n  # bucket does not have access logs\n"
                  },
                  "endLine": 41,
                  "startLine": 39
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AWS_18",
          "ruleIndex": 7
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure all data stored in the S3 bucket is securely encrypted at rest."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "39 resource \"aws_s3_bucket\" \"operations\" {\n"
                  },
                  "startLine": 39
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/aws/s3.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "39 resource \"aws_s3_bucket\" \"operations\" {\n  # bucket is not encrypted\n  # bucket does not have access logs\n"
                  },
                  "endLine": 41,
                  "startLine": 39
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AWS_19",
          "ruleIndex": 8
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure S3 bucket has MFA delete enabled."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "39 resource \"aws_s3_bucket\" \"operations\" {\n"
                  },
                  "startLine": 39
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/aws/s3.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "39 resource \"aws_s3_bucket\" \"operations\" {\n  # bucket is not encrypted\n  # bucket does not have access logs\n"
                  },
                  "endLine": 41,
                  "startLine": 39
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AWS_52",
          "ruleIndex": 9
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure all data stored in the S3 bucket is securely encrypted at rest."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "55 resource \"aws_s3_bucket\" \"data_science\" {\n"
                  },
                  "startLine": 55
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/aws/s3.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "55 resource \"aws_s3_bucket\" \"data_science\" {\n  # bucket is not encrypted\n  bucket = \"${local.resource_prefix.value}-data-science\"\n"
                  },
                  "endLine": 57,
                  "startLine": 55
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AWS_19",
          "ruleIndex": 8
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure S3 bucket has MFA delete enabled."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "55 resource \"aws_s3_bucket\" \"data_science\" {\n"
                  },
                  "startLine": 55
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/aws/s3.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "55 resource \"aws_s3_bucket\" \"data_science\" {\n  # bucket is not encrypted\n  bucket = \"${local.resource_prefix.value}-data-science\"\n"
                  },
                  "endLine": 57,
                  "startLine": 55
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AWS_52",
          "ruleIndex": 9
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure the S3 bucket has access logging enabled."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "69 resource \"aws_s3_bucket\" \"logs\" {\n"
                  },
                  "startLine": 69
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/aws/s3.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "69 resource \"aws_s3_bucket\" \"logs\" {\n  bucket = \"${local.resource_prefix.value}-logs\"\n  acl    = \"log-delivery-write\"\n"
                  },
                  "endLine": 71,
                  "startLine": 69
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AWS_18",
          "ruleIndex": 7
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure S3 bucket has MFA delete enabled."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "69 resource \"aws_s3_bucket\" \"logs\" {\n"
                  },
                  "startLine": 69
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/aws/s3.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "69 resource \"aws_s3_bucket\" \"logs\" {\n  bucket = \"${local.resource_prefix.value}-logs\"\n  acl    = \"log-delivery-write\"\n"
                  },
                  "endLine": 71,
                  "startLine": 69
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AWS_52",
          "ruleIndex": 9
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure AKS has an API Server Authorized IP Ranges enabled."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "1 resource azurerm_kubernetes_cluster \"k8s_cluster\" {\n"
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/azure/aks.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "1 resource azurerm_kubernetes_cluster \"k8s_cluster\" {\n  dns_prefix          = \"terragoat-${var.environment}\"\n  location            = var.location\n"
                  },
                  "endLine": 3,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AZURE_6",
          "ruleIndex": 25
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure Kube Dashboard is disabled."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "1 resource azurerm_kubernetes_cluster \"k8s_cluster\" {\n"
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/azure/aks.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "1 resource azurerm_kubernetes_cluster \"k8s_cluster\" {\n  dns_prefix          = \"terragoat-${var.environment}\"\n  location            = var.location\n"
                  },
                  "endLine": 3,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AZURE_8",
          "ruleIndex": 26
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure AKS logging to Azure Monitoring is Configured."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "1 resource azurerm_kubernetes_cluster \"k8s_cluster\" {\n"
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/azure/aks.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "1 resource azurerm_kubernetes_cluster \"k8s_cluster\" {\n  dns_prefix          = \"terragoat-${var.environment}\"\n  location            = var.location\n"
                  },
                  "endLine": 3,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AZURE_4",
          "ruleIndex": 27
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure AKS cluster has Network Policy configured."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "1 resource azurerm_kubernetes_cluster \"k8s_cluster\" {\n"
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/azure/aks.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "1 resource azurerm_kubernetes_cluster \"k8s_cluster\" {\n  dns_prefix          = \"terragoat-${var.environment}\"\n  location            = var.location\n"
                  },
                  "endLine": 3,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AZURE_7",
          "ruleIndex": 28
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure RBAC is enabled on AKS clusters."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "1 resource azurerm_kubernetes_cluster \"k8s_cluster\" {\n"
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/azure/aks.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "1 resource azurerm_kubernetes_cluster \"k8s_cluster\" {\n  dns_prefix          = \"terragoat-${var.environment}\"\n  location            = var.location\n"
                  },
                  "endLine": 3,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AZURE_5",
          "ruleIndex": 29
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure App Service Authentication is set on Azure App Service."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "12 resource azurerm_app_service \"app-service1\" {\n"
                  },
                  "startLine": 12
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/azure/app_service.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "12 resource azurerm_app_service \"app-service1\" {\n  app_service_plan_id = azurerm_app_service_plan.example.id\n  location            = var.location\n"
                  },
                  "endLine": 14,
                  "startLine": 12
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AZURE_13",
          "ruleIndex": 30
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure web app redirects all HTTP traffic to HTTPS in Azure App Service."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "12 resource azurerm_app_service \"app-service1\" {\n"
                  },
                  "startLine": 12
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/azure/app_service.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "12 resource azurerm_app_service \"app-service1\" {\n  app_service_plan_id = azurerm_app_service_plan.example.id\n  location            = var.location\n"
                  },
                  "endLine": 14,
                  "startLine": 12
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AZURE_14",
          "ruleIndex": 31
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure that 'HTTP Version' is the latest if used to run the web app."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "12 resource azurerm_app_service \"app-service1\" {\n"
                  },
                  "startLine": 12
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/azure/app_service.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "12 resource azurerm_app_service \"app-service1\" {\n  app_service_plan_id = azurerm_app_service_plan.example.id\n  location            = var.location\n"
                  },
                  "endLine": 14,
                  "startLine": 12
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AZURE_18",
          "ruleIndex": 32
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure web app is using the latest version of TLS encryption."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "12 resource azurerm_app_service \"app-service1\" {\n"
                  },
                  "startLine": 12
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/azure/app_service.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "12 resource azurerm_app_service \"app-service1\" {\n  app_service_plan_id = azurerm_app_service_plan.example.id\n  location            = var.location\n"
                  },
                  "endLine": 14,
                  "startLine": 12
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AZURE_15",
          "ruleIndex": 33
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure the web app has 'Client Certificates (Incoming client certificates)' set."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "12 resource azurerm_app_service \"app-service1\" {\n"
                  },
                  "startLine": 12
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/azure/app_service.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "12 resource azurerm_app_service \"app-service1\" {\n  app_service_plan_id = azurerm_app_service_plan.example.id\n  location            = var.location\n"
                  },
                  "endLine": 14,
                  "startLine": 12
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AZURE_17",
          "ruleIndex": 34
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure that Register with Azure Active Directory is enabled on App Service."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "12 resource azurerm_app_service \"app-service1\" {\n"
                  },
                  "startLine": 12
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/azure/app_service.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "12 resource azurerm_app_service \"app-service1\" {\n  app_service_plan_id = azurerm_app_service_plan.example.id\n  location            = var.location\n"
                  },
                  "endLine": 14,
                  "startLine": 12
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AZURE_16",
          "ruleIndex": 35
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure App Service Authentication is set on Azure App Service."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "23 resource azurerm_app_service \"app-service2\" {\n"
                  },
                  "startLine": 23
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/azure/app_service.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "23 resource azurerm_app_service \"app-service2\" {\n  app_service_plan_id = azurerm_app_service_plan.example.id\n  location            = var.location\n"
                  },
                  "endLine": 25,
                  "startLine": 23
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AZURE_13",
          "ruleIndex": 30
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure that 'HTTP Version' is the latest if used to run the web app."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "23 resource azurerm_app_service \"app-service2\" {\n"
                  },
                  "startLine": 23
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/azure/app_service.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "23 resource azurerm_app_service \"app-service2\" {\n  app_service_plan_id = azurerm_app_service_plan.example.id\n  location            = var.location\n"
                  },
                  "endLine": 25,
                  "startLine": 23
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AZURE_18",
          "ruleIndex": 32
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure the web app has 'Client Certificates (Incoming client certificates)' set."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "23 resource azurerm_app_service \"app-service2\" {\n"
                  },
                  "startLine": 23
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/azure/app_service.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "23 resource azurerm_app_service \"app-service2\" {\n  app_service_plan_id = azurerm_app_service_plan.example.id\n  location            = var.location\n"
                  },
                  "endLine": 25,
                  "startLine": 23
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AZURE_17",
          "ruleIndex": 34
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure that Register with Azure Active Directory is enabled on App Service."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "23 resource azurerm_app_service \"app-service2\" {\n"
                  },
                  "startLine": 23
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/azure/app_service.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "23 resource azurerm_app_service \"app-service2\" {\n  app_service_plan_id = azurerm_app_service_plan.example.id\n  location            = var.location\n"
                  },
                  "endLine": 25,
                  "startLine": 23
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AZURE_16",
          "ruleIndex": 35
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure Azure Instance does not use basic authentication(Use SSH Key Instead)."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "9 resource azurerm_linux_virtual_machine \"linux_machine\" {\n"
                  },
                  "startLine": 9
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/azure/instance.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "9 resource azurerm_linux_virtual_machine \"linux_machine\" {\n  admin_username                  = \"terragoat-linux\"\n  admin_password                  = random_string.password.result\n"
                  },
                  "endLine": 11,
                  "startLine": 9
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AZURE_1",
          "ruleIndex": 36
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure the key vault is recoverable."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "1 resource \"azurerm_key_vault\" \"example\" {\n"
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/azure/key_vault.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "1 resource \"azurerm_key_vault\" \"example\" {\n  name                = \"terragoat-key-${var.environment}${random_integer.rnd_int.result}\"\n  location            = azurerm_resource_group.example.location\n"
                  },
                  "endLine": 3,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AZURE_42",
          "ruleIndex": 37
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure that the expiration date is set on all keys."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "24 resource \"azurerm_key_vault_key\" \"generated\" {\n"
                  },
                  "startLine": 24
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/azure/key_vault.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "24 resource \"azurerm_key_vault_key\" \"generated\" {\n  name         = \"terragoat-generated-certificate-${var.environment}\"\n  key_vault_id = azurerm_key_vault.example.id\n"
                  },
                  "endLine": 26,
                  "startLine": 24
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AZURE_40",
          "ruleIndex": 38
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure that the expiration date is set on all secrets."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "39 resource \"azurerm_key_vault_secret\" \"secret\" {\n"
                  },
                  "startLine": 39
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/azure/key_vault.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "39 resource \"azurerm_key_vault_secret\" \"secret\" {\n  key_vault_id = azurerm_key_vault.example.id\n  name         = \"terragoat-secret-${var.environment}\"\n"
                  },
                  "endLine": 41,
                  "startLine": 39
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AZURE_41",
          "ruleIndex": 39
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure audit profile captures all the activities."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "1 resource azurerm_monitor_log_profile \"logging_profile\" {\n"
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/azure/logging.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "1 resource azurerm_monitor_log_profile \"logging_profile\" {\n  storage_account_id = azurerm_storage_account.example.id\n  categories         = [\"Action\"]\n"
                  },
                  "endLine": 3,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AZURE_38",
          "ruleIndex": 40
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure that Activity Log Retention is set 365 days or greater."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "1 resource azurerm_monitor_log_profile \"logging_profile\" {\n"
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/azure/logging.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "1 resource azurerm_monitor_log_profile \"logging_profile\" {\n  storage_account_id = azurerm_storage_account.example.id\n  categories         = [\"Action\"]\n"
                  },
                  "endLine": 3,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AZURE_37",
          "ruleIndex": 41
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure that RDP access is restricted from the internet."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "39 resource azurerm_network_security_group \"bad_sg\" {\n"
                  },
                  "startLine": 39
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/azure/networking.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "39 resource azurerm_network_security_group \"bad_sg\" {\n  location            = var.location\n  name                = \"terragoat-${var.environment}\"\n"
                  },
                  "endLine": 41,
                  "startLine": 39
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AZURE_9",
          "ruleIndex": 42
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure that SSH access is restricted from the internet."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "39 resource azurerm_network_security_group \"bad_sg\" {\n"
                  },
                  "startLine": 39
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/azure/networking.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "39 resource azurerm_network_security_group \"bad_sg\" {\n  location            = var.location\n  name                = \"terragoat-${var.environment}\"\n"
                  },
                  "endLine": 41,
                  "startLine": 39
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AZURE_10",
          "ruleIndex": 43
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure that Network Security Group Flow Log retention period is 'greater than 90 days'."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "75 resource azurerm_network_watcher_flow_log \"flow_log\" {\n"
                  },
                  "startLine": 75
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/azure/networking.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "75 resource azurerm_network_watcher_flow_log \"flow_log\" {\n  enabled                   = false\n  network_security_group_id = azurerm_network_security_group.bad_sg.id\n"
                  },
                  "endLine": 77,
                  "startLine": 75
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AZURE_12",
          "ruleIndex": 44
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure that no custom subscription owner roles are created."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "3 resource \"azurerm_role_definition\" \"example\" {\n"
                  },
                  "startLine": 3
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/azure/roles.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "3 resource \"azurerm_role_definition\" \"example\" {\n  name        = \"my-custom-role\"\n  scope       = data.azurerm_subscription.current_subscription.id\n"
                  },
                  "endLine": 5,
                  "startLine": 3
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AZURE_39",
          "ruleIndex": 45
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure that standard pricing tier is selected."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "1 resource azurerm_security_center_subscription_pricing \"pricing\" {\n"
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/azure/security_center.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "1 resource azurerm_security_center_subscription_pricing \"pricing\" {\n  tier = \"Free\"\n}\n"
                  },
                  "endLine": 3,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AZURE_19",
          "ruleIndex": 46
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure that 'Send email notification for high severity alerts' is set to 'On'."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "5 resource azurerm_security_center_contact \"contact\" {\n"
                  },
                  "startLine": 5
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/azure/security_center.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "5 resource azurerm_security_center_contact \"contact\" {\n  alert_notifications = false\n  alerts_to_admins    = false\n"
                  },
                  "endLine": 7,
                  "startLine": 5
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AZURE_21",
          "ruleIndex": 47
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure that 'Send email notification for high severity alerts' is set to 'On'."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "5 resource azurerm_security_center_contact \"contact\" {\n"
                  },
                  "startLine": 5
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/azure/security_center.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "5 resource azurerm_security_center_contact \"contact\" {\n  alert_notifications = false\n  alerts_to_admins    = false\n"
                  },
                  "endLine": 7,
                  "startLine": 5
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AZURE_22",
          "ruleIndex": 48
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure that security contact 'Phone number' is set."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "5 resource azurerm_security_center_contact \"contact\" {\n"
                  },
                  "startLine": 5
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/azure/security_center.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "5 resource azurerm_security_center_contact \"contact\" {\n  alert_notifications = false\n  alerts_to_admins    = false\n"
                  },
                  "endLine": 7,
                  "startLine": 5
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AZURE_20",
          "ruleIndex": 49
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure that 'Auditing' is set to 'On' for SQL servers."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "9 resource \"azurerm_sql_server\" \"example\" {\n"
                  },
                  "startLine": 9
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/azure/sql.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "9 resource \"azurerm_sql_server\" \"example\" {\n  name                         = \"terragoat-sqlserver-${var.environment}${random_integer.rnd_int.result}\"\n  resource_group_name          = azurerm_resource_group.example.name\n"
                  },
                  "endLine": 11,
                  "startLine": 9
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AZURE_23",
          "ruleIndex": 50
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure that 'Auditing' Retention is 'greater than 90 days' for SQL servers."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "9 resource \"azurerm_sql_server\" \"example\" {\n"
                  },
                  "startLine": 9
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/azure/sql.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "9 resource \"azurerm_sql_server\" \"example\" {\n  name                         = \"terragoat-sqlserver-${var.environment}${random_integer.rnd_int.result}\"\n  resource_group_name          = azurerm_resource_group.example.name\n"
                  },
                  "endLine": 11,
                  "startLine": 9
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AZURE_24",
          "ruleIndex": 51
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure that 'Send Alerts To' is enabled for MSSQL servers."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "22 resource \"azurerm_mssql_server_security_alert_policy\" \"example\" {\n"
                  },
                  "startLine": 22
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/azure/sql.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "22 resource \"azurerm_mssql_server_security_alert_policy\" \"example\" {\n  resource_group_name        = azurerm_resource_group.example.name\n  server_name                = azurerm_sql_server.example.name\n"
                  },
                  "endLine": 24,
                  "startLine": 22
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AZURE_26",
          "ruleIndex": 52
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure that 'Email service and co-administrators' is 'Enabled' for MSSQL servers."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "22 resource \"azurerm_mssql_server_security_alert_policy\" \"example\" {\n"
                  },
                  "startLine": 22
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/azure/sql.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "22 resource \"azurerm_mssql_server_security_alert_policy\" \"example\" {\n  resource_group_name        = azurerm_resource_group.example.name\n  server_name                = azurerm_sql_server.example.name\n"
                  },
                  "endLine": 24,
                  "startLine": 22
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AZURE_27",
          "ruleIndex": 53
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure that 'Threat Detection types' is set to 'All'."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "22 resource \"azurerm_mssql_server_security_alert_policy\" \"example\" {\n"
                  },
                  "startLine": 22
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/azure/sql.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "22 resource \"azurerm_mssql_server_security_alert_policy\" \"example\" {\n  resource_group_name        = azurerm_resource_group.example.name\n  server_name                = azurerm_sql_server.example.name\n"
                  },
                  "endLine": 24,
                  "startLine": 22
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AZURE_25",
          "ruleIndex": 54
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure 'Enforce SSL connection' is set to 'ENABLED' for MySQL Database Server."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "35 resource \"azurerm_mysql_server\" \"example\" {\n"
                  },
                  "startLine": 35
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/azure/sql.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "35 resource \"azurerm_mysql_server\" \"example\" {\n  name                = \"terragoat-mysql-${var.environment}${random_integer.rnd_int.result}\"\n  location            = azurerm_resource_group.example.location\n"
                  },
                  "endLine": 37,
                  "startLine": 35
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AZURE_28",
          "ruleIndex": 55
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure 'Enforce SSL connection' is set to 'ENABLED' for PostgreSQL Database Server."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "54 resource \"azurerm_postgresql_server\" \"example\" {\n"
                  },
                  "startLine": 54
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/azure/sql.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "54 resource \"azurerm_postgresql_server\" \"example\" {\n  name                         = \"terragoat-postgresql-${var.environment}${random_integer.rnd_int.result}\"\n  location                     = azurerm_resource_group.example.location\n"
                  },
                  "endLine": 56,
                  "startLine": 54
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AZURE_29",
          "ruleIndex": 56
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure server parameter 'connection_throttling' is set to 'ON' for PostgreSQL Database Server."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "69 resource \"azurerm_postgresql_configuration\" \"thrtottling_config\" {\n"
                  },
                  "startLine": 69
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/azure/sql.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "69 resource \"azurerm_postgresql_configuration\" \"thrtottling_config\" {\n  name                = \"connection_throttling\"\n  resource_group_name = azurerm_resource_group.example.name\n"
                  },
                  "endLine": 71,
                  "startLine": 69
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AZURE_32",
          "ruleIndex": 57
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure server parameter 'log_checkpoints' is set to 'ON' for PostgreSQL Database Server."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "76 resource \"azurerm_postgresql_configuration\" \"example\" {\n"
                  },
                  "startLine": 76
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/azure/sql.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "76 resource \"azurerm_postgresql_configuration\" \"example\" {\n  name                = \"log_checkpoints\"\n  resource_group_name = azurerm_resource_group.example.name\n"
                  },
                  "endLine": 78,
                  "startLine": 76
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AZURE_30",
          "ruleIndex": 58
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure Azure managed disk have encryption enabled."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "1 resource \"azurerm_managed_disk\" \"example\" {\n"
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/azure/storage.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "1 resource \"azurerm_managed_disk\" \"example\" {\n  name                 = \"terragoat-disk-${var.environment}\"\n  location             = var.location\n"
                  },
                  "endLine": 3,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AZURE_2",
          "ruleIndex": 59
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure default network access rule for Storage Accounts is set to deny."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "13 resource \"azurerm_storage_account\" \"example\" {\n"
                  },
                  "startLine": 13
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/azure/storage.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "13 resource \"azurerm_storage_account\" \"example\" {\n  name                     = \"tgsa${var.environment}${random_integer.rnd_int.result}\"\n  resource_group_name      = azurerm_resource_group.example.name\n"
                  },
                  "endLine": 15,
                  "startLine": 13
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AZURE_35",
          "ruleIndex": 60
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure Storage logging is enabled for Queue service for read, write and delete requests."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "13 resource \"azurerm_storage_account\" \"example\" {\n"
                  },
                  "startLine": 13
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/azure/storage.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "13 resource \"azurerm_storage_account\" \"example\" {\n  name                     = \"tgsa${var.environment}${random_integer.rnd_int.result}\"\n  resource_group_name      = azurerm_resource_group.example.name\n"
                  },
                  "endLine": 15,
                  "startLine": 13
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AZURE_33",
          "ruleIndex": 61
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure Storage Account is using the latest version of TLS encryption."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "13 resource \"azurerm_storage_account\" \"example\" {\n"
                  },
                  "startLine": 13
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/azure/storage.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "13 resource \"azurerm_storage_account\" \"example\" {\n  name                     = \"tgsa${var.environment}${random_integer.rnd_int.result}\"\n  resource_group_name      = azurerm_resource_group.example.name\n"
                  },
                  "endLine": 15,
                  "startLine": 13
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AZURE_44",
          "ruleIndex": 62
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure that 'Secure transfer required' is set to 'Enabled'."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "13 resource \"azurerm_storage_account\" \"example\" {\n"
                  },
                  "startLine": 13
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/azure/storage.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "13 resource \"azurerm_storage_account\" \"example\" {\n  name                     = \"tgsa${var.environment}${random_integer.rnd_int.result}\"\n  resource_group_name      = azurerm_resource_group.example.name\n"
                  },
                  "endLine": 15,
                  "startLine": 13
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AZURE_3",
          "ruleIndex": 63
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure 'Trusted Microsoft Services' is enabled for Storage Account access."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "42 resource \"azurerm_storage_account_network_rules\" \"test\" {\n"
                  },
                  "startLine": 42
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/azure/storage.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "42 resource \"azurerm_storage_account_network_rules\" \"test\" {\n  resource_group_name  = azurerm_resource_group.example.name\n  storage_account_name = azurerm_storage_account.example.name\n"
                  },
                  "endLine": 44,
                  "startLine": 42
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_AZURE_36",
          "ruleIndex": 64
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure all Cloud SQL database instance have backup configuration enabled."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "1 resource google_sql_database_instance \"master_instance\" {\n"
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/gcp/big_data.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "1 resource google_sql_database_instance \"master_instance\" {\n  name             = \"terragoat-${var.environment}-master\"\n  database_version = \"POSTGRES_11\"\n"
                  },
                  "endLine": 3,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_GCP_14",
          "ruleIndex": 65
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure that Cloud SQL database Instances are not open to the world."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "1 resource google_sql_database_instance \"master_instance\" {\n"
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/gcp/big_data.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "1 resource google_sql_database_instance \"master_instance\" {\n  name             = \"terragoat-${var.environment}-master\"\n  database_version = \"POSTGRES_11\"\n"
                  },
                  "endLine": 3,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_GCP_11",
          "ruleIndex": 66
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure all Cloud SQL database instance requires all incoming connections to use SSL."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "1 resource google_sql_database_instance \"master_instance\" {\n"
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/gcp/big_data.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "1 resource google_sql_database_instance \"master_instance\" {\n  name             = \"terragoat-${var.environment}-master\"\n  database_version = \"POSTGRES_11\"\n"
                  },
                  "endLine": 3,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_GCP_6",
          "ruleIndex": 67
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure that BigQuery datasets are not anonymously or publicly accessible."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "21 resource google_bigquery_dataset \"dataset\" {\n"
                  },
                  "startLine": 21
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/gcp/big_data.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "21 resource google_bigquery_dataset \"dataset\" {\n  dataset_id = \"terragoat_${var.environment}_dataset\"\n  access {\n"
                  },
                  "endLine": 23,
                  "startLine": 21
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_GCP_15",
          "ruleIndex": 68
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure Google storage bucket have encryption enabled."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "1 resource \"google_storage_bucket\" \"terragoat_website\" {\n"
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/gcp/gcs.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "1 resource \"google_storage_bucket\" \"terragoat_website\" {\n  name          = \"terragot-${var.environment}\"\n  force_destroy = true\n"
                  },
                  "endLine": 3,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_GCP_5",
          "ruleIndex": 69
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure that Cloud Storage buckets have uniform bucket-level access enabled."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "1 resource \"google_storage_bucket\" \"terragoat_website\" {\n"
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/gcp/gcs.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "1 resource \"google_storage_bucket\" \"terragoat_website\" {\n  name          = \"terragot-${var.environment}\"\n  force_destroy = true\n"
                  },
                  "endLine": 3,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_GCP_29",
          "ruleIndex": 70
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure that Cloud Storage bucket is not anonymously or publicly accessible."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "6 resource \"google_storage_bucket_iam_binding\" \"allow_public_read\" {\n"
                  },
                  "startLine": 6
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/gcp/gcs.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "6 resource \"google_storage_bucket_iam_binding\" \"allow_public_read\" {\n  bucket  = google_storage_bucket.terragoat_website.id\n  members = [\"allUsers\"]\n"
                  },
                  "endLine": 8,
                  "startLine": 6
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_GCP_28",
          "ruleIndex": 71
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure Kubernetes Cluster is created with Alias IP ranges enabled."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "6 resource \"google_container_cluster\" \"workload_cluster\" {\n"
                  },
                  "startLine": 6
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/gcp/gke.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "6 resource \"google_container_cluster\" \"workload_cluster\" {\n  name               = \"terragoat-${var.environment}-cluster\"\n  logging_service    = \"none\"\n"
                  },
                  "endLine": 8,
                  "startLine": 6
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_GCP_23",
          "ruleIndex": 72
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure GKE basic auth is disabled."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "6 resource \"google_container_cluster\" \"workload_cluster\" {\n"
                  },
                  "startLine": 6
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/gcp/gke.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "6 resource \"google_container_cluster\" \"workload_cluster\" {\n  name               = \"terragoat-${var.environment}-cluster\"\n  logging_service    = \"none\"\n"
                  },
                  "endLine": 8,
                  "startLine": 6
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_GCP_19",
          "ruleIndex": 73
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure a client certificate is used by clients to authenticate to Kubernetes Engine Clusters."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "6 resource \"google_container_cluster\" \"workload_cluster\" {\n"
                  },
                  "startLine": 6
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/gcp/gke.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "6 resource \"google_container_cluster\" \"workload_cluster\" {\n  name               = \"terragoat-${var.environment}-cluster\"\n  logging_service    = \"none\"\n"
                  },
                  "endLine": 8,
                  "startLine": 6
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_GCP_13",
          "ruleIndex": 74
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure Stackdriver Logging is set to Enabled on Kubernetes Engine Clusters."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "6 resource \"google_container_cluster\" \"workload_cluster\" {\n"
                  },
                  "startLine": 6
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/gcp/gke.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "6 resource \"google_container_cluster\" \"workload_cluster\" {\n  name               = \"terragoat-${var.environment}-cluster\"\n  logging_service    = \"none\"\n"
                  },
                  "endLine": 8,
                  "startLine": 6
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_GCP_1",
          "ruleIndex": 75
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure Legacy Authorization is set to Disabled on Kubernetes Engine Clusters."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "6 resource \"google_container_cluster\" \"workload_cluster\" {\n"
                  },
                  "startLine": 6
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/gcp/gke.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "6 resource \"google_container_cluster\" \"workload_cluster\" {\n  name               = \"terragoat-${var.environment}-cluster\"\n  logging_service    = \"none\"\n"
                  },
                  "endLine": 8,
                  "startLine": 6
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_GCP_7",
          "ruleIndex": 76
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure Kubernetes Clusters are configured with Labels."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "6 resource \"google_container_cluster\" \"workload_cluster\" {\n"
                  },
                  "startLine": 6
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/gcp/gke.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "6 resource \"google_container_cluster\" \"workload_cluster\" {\n  name               = \"terragoat-${var.environment}-cluster\"\n  logging_service    = \"none\"\n"
                  },
                  "endLine": 8,
                  "startLine": 6
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_GCP_21",
          "ruleIndex": 77
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure Stackdriver Monitoring is set to Enabled on Kubernetes Engine Clusters."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "6 resource \"google_container_cluster\" \"workload_cluster\" {\n"
                  },
                  "startLine": 6
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/gcp/gke.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "6 resource \"google_container_cluster\" \"workload_cluster\" {\n  name               = \"terragoat-${var.environment}-cluster\"\n  logging_service    = \"none\"\n"
                  },
                  "endLine": 8,
                  "startLine": 6
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_GCP_8",
          "ruleIndex": 78
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure Network Policy is enabled on Kubernetes Engine Clusters."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "6 resource \"google_container_cluster\" \"workload_cluster\" {\n"
                  },
                  "startLine": 6
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/gcp/gke.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "6 resource \"google_container_cluster\" \"workload_cluster\" {\n  name               = \"terragoat-${var.environment}-cluster\"\n  logging_service    = \"none\"\n"
                  },
                  "endLine": 8,
                  "startLine": 6
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_GCP_12",
          "ruleIndex": 79
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure PodSecurityPolicy controller is enabled on the Kubernetes Engine Clusters."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "6 resource \"google_container_cluster\" \"workload_cluster\" {\n"
                  },
                  "startLine": 6
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/gcp/gke.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "6 resource \"google_container_cluster\" \"workload_cluster\" {\n  name               = \"terragoat-${var.environment}-cluster\"\n  logging_service    = \"none\"\n"
                  },
                  "endLine": 8,
                  "startLine": 6
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_GCP_24",
          "ruleIndex": 80
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure Kubernetes Cluster is created with Private cluster enabled."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "6 resource \"google_container_cluster\" \"workload_cluster\" {\n"
                  },
                  "startLine": 6
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/gcp/gke.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "6 resource \"google_container_cluster\" \"workload_cluster\" {\n  name               = \"terragoat-${var.environment}-cluster\"\n  logging_service    = \"none\"\n"
                  },
                  "endLine": 8,
                  "startLine": 6
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_GCP_25",
          "ruleIndex": 81
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure GKE Control Plane is not public."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "6 resource \"google_container_cluster\" \"workload_cluster\" {\n"
                  },
                  "startLine": 6
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/gcp/gke.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "6 resource \"google_container_cluster\" \"workload_cluster\" {\n  name               = \"terragoat-${var.environment}-cluster\"\n  logging_service    = \"none\"\n"
                  },
                  "endLine": 8,
                  "startLine": 6
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_GCP_18",
          "ruleIndex": 82
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure 'Automatic node repair' is enabled for Kubernetes Clusters."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "24 resource google_container_node_pool \"custom_node_pool\" {\n"
                  },
                  "startLine": 24
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/gcp/gke.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "24 resource google_container_node_pool \"custom_node_pool\" {\n  cluster  = google_container_cluster.workload_cluster.name\n  location = var.region\n"
                  },
                  "endLine": 26,
                  "startLine": 24
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_GCP_9",
          "ruleIndex": 83
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure 'Automatic node upgrade' is enabled for Kubernetes Clusters."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "24 resource google_container_node_pool \"custom_node_pool\" {\n"
                  },
                  "startLine": 24
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/gcp/gke.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "24 resource google_container_node_pool \"custom_node_pool\" {\n  cluster  = google_container_cluster.workload_cluster.name\n  location = var.region\n"
                  },
                  "endLine": 26,
                  "startLine": 24
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_GCP_10",
          "ruleIndex": 84
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure Container-Optimized OS (cos) is used for Kubernetes Engine Clusters Node image."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "24 resource google_container_node_pool \"custom_node_pool\" {\n"
                  },
                  "startLine": 24
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/gcp/gke.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "24 resource google_container_node_pool \"custom_node_pool\" {\n  cluster  = google_container_cluster.workload_cluster.name\n  location = var.region\n"
                  },
                  "endLine": 26,
                  "startLine": 24
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_GCP_22",
          "ruleIndex": 85
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure VM disks for critical VMs are encrypted with Customer Supplied Encryption Keys (CSEK)."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "3 resource google_compute_instance \"server\" {\n"
                  },
                  "startLine": 3
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/gcp/instances.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "3 resource google_compute_instance \"server\" {\n  machine_type = \"n1-standard-1\"\n  name         = \"terragoat-${var.environment}-machine\"\n"
                  },
                  "endLine": 5,
                  "startLine": 3
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_GCP_38",
          "ruleIndex": 86
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure that instances are not configured to use the default service account."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "3 resource google_compute_instance \"server\" {\n"
                  },
                  "startLine": 3
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/gcp/instances.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "3 resource google_compute_instance \"server\" {\n  machine_type = \"n1-standard-1\"\n  name         = \"terragoat-${var.environment}-machine\"\n"
                  },
                  "endLine": 5,
                  "startLine": 3
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_GCP_30",
          "ruleIndex": 87
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure that IP forwarding is not enabled on Instances."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "3 resource google_compute_instance \"server\" {\n"
                  },
                  "startLine": 3
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/gcp/instances.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "3 resource google_compute_instance \"server\" {\n  machine_type = \"n1-standard-1\"\n  name         = \"terragoat-${var.environment}-machine\"\n"
                  },
                  "endLine": 5,
                  "startLine": 3
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_GCP_36",
          "ruleIndex": 88
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure that no instance in the project overrides the project setting for enabling OSLogin(OSLogin needs to be enabled in prject metadata for all instances)."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "3 resource google_compute_instance \"server\" {\n"
                  },
                  "startLine": 3
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/gcp/instances.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "3 resource google_compute_instance \"server\" {\n  machine_type = \"n1-standard-1\"\n  name         = \"terragoat-${var.environment}-machine\"\n"
                  },
                  "endLine": 5,
                  "startLine": 3
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_GCP_34",
          "ruleIndex": 89
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure 'Enable connecting to serial ports' is not enabled for VM Instance."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "3 resource google_compute_instance \"server\" {\n"
                  },
                  "startLine": 3
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/gcp/instances.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "3 resource google_compute_instance \"server\" {\n  machine_type = \"n1-standard-1\"\n  name         = \"terragoat-${var.environment}-machine\"\n"
                  },
                  "endLine": 5,
                  "startLine": 3
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_GCP_35",
          "ruleIndex": 90
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure Compute instances are launched with Shielded VM enabled."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "3 resource google_compute_instance \"server\" {\n"
                  },
                  "startLine": 3
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/gcp/instances.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "3 resource google_compute_instance \"server\" {\n  machine_type = \"n1-standard-1\"\n  name         = \"terragoat-${var.environment}-machine\"\n"
                  },
                  "endLine": 5,
                  "startLine": 3
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_GCP_39",
          "ruleIndex": 91
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure 'Block Project-wide SSH keys' is enabled for VM instances."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "3 resource google_compute_instance \"server\" {\n"
                  },
                  "startLine": 3
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/gcp/instances.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "3 resource google_compute_instance \"server\" {\n  machine_type = \"n1-standard-1\"\n  name         = \"terragoat-${var.environment}-machine\"\n"
                  },
                  "endLine": 5,
                  "startLine": 3
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_GCP_32",
          "ruleIndex": 92
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure VM disks for critical VMs are encrypted with Customer Supplied Encryption Keys (CSEK)."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "26 resource google_compute_disk \"unencrypted_disk\" {\n"
                  },
                  "startLine": 26
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/gcp/instances.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "26 resource google_compute_disk \"unencrypted_disk\" {\n  name = \"terragoat-${var.environment}-disk\"\n}"
                  },
                  "endLine": 28,
                  "startLine": 26
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_GCP_37",
          "ruleIndex": 93
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure that VPC Flow Logs is enabled for every subnet in a VPC Network."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "7 resource \"google_compute_subnetwork\" \"public-subnetwork\" {\n"
                  },
                  "startLine": 7
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/gcp/networks.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "7 resource \"google_compute_subnetwork\" \"public-subnetwork\" {\n  name          = \"terragoat-${var.environment}-public-subnetwork\"\n  ip_cidr_range = \"10.0.0.0/24\"\n"
                  },
                  "endLine": 9,
                  "startLine": 7
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_GCP_26",
          "ruleIndex": 94
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure Google compute firewall ingress does not allow unrestricted ssh access."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "19 resource \"google_compute_firewall\" \"allow_all\" {\n"
                  },
                  "startLine": 19
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/gcp/networks.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "19 resource \"google_compute_firewall\" \"allow_all\" {\n  name          = \"terragoat-${var.environment}-firewall\"\n  network       = google_compute_network.vpc.id\n"
                  },
                  "endLine": 21,
                  "startLine": 19
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_GCP_2",
          "ruleIndex": 95
        },
        {
          "message": {
            "markdown": "",
            "text": "Ensure Google compute firewall ingress does not allow unrestricted rdp access."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "19 resource \"google_compute_firewall\" \"allow_all\" {\n"
                  },
                  "startLine": 19
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/terragoat/terraform/gcp/networks.tf"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "19 resource \"google_compute_firewall\" \"allow_all\" {\n  name          = \"terragoat-${var.environment}-firewall\"\n  network       = google_compute_network.vpc.id\n"
                  },
                  "endLine": 21,
                  "startLine": 19
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CKV_GCP_3",
          "ruleIndex": 96
        }
      ],
      "automationDetails": {
        "description": {
          "text": "Static Analysis Security Test results using @ShiftLeft/sast-scan"
        },
        "guid": "db31560d-8502-48eb-9a7d-de18cc3d09ce"
      },
      "versionControlProvenance": [
        {
          "branch": "master",
          "repositoryUri": "https://github.com/bridgecrewio/terragoat",
          "revisionId": "0ffedfb9dacd7bb7702447b2d749b94a5cc06d07"
        }
      ]
    }
  ],
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "inlineExternalProperties": [
    {
      "guid": "db31560d-8502-48eb-9a7d-de18cc3d09ce",
      "runGuid": "c6d8055f-d485-44f8-a969-93875d094287"
    }
  ]
}